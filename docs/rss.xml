<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://qigaowei.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://qigaowei.github.io</link></image><lastBuildDate>Fri, 26 Jul 2024 00:44:42 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>mysql返回随机数据</title><link>https://qigaowei.github.io/post/mysql-fan-hui-sui-ji-shu-ju.html</link><description>ORDER BY RAND()。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mysql-fan-hui-sui-ji-shu-ju.html</guid><pubDate>Fri, 26 Jul 2024 00:43:41 +0000</pubDate></item><item><title>磁力一键复制源码</title><link>https://qigaowei.github.io/post/ci-li-yi-jian-fu-zhi-yuan-ma.html</link><description>```&#13;
 @ResponseBody&#13;
    public String magnet(@RequestBody QueryVo vo) throws Exception{&#13;
        StringBuffer magnets=new StringBuffer('');&#13;
        if(vo.getP()==null){&#13;
            vo.setP(0);&#13;
        }&#13;
        String html=HttpRequest.get('https://doc.htmcdn.com:39988/search?word='+vo.getK()+'&amp;sort=&amp;page='+vo.getP()+'')&#13;
                .header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7')&#13;
                .header('Accept-Encoding', 'gzip, deflate, br, zstd')&#13;
                .header('Accept-Language', 'zh')&#13;
                .header('Cache-Control', 'no-cache')&#13;
                .header('Pragma', 'no-cache')&#13;
                .header('Priority', 'u=0, i')&#13;
                .header('Referer', 'https://doc.htmcdn.com:39988/search?')&#13;
                .header('Sec-Ch-Ua', '\'Not/A)Brand\';v=\'8\', \'Chromium\';v=\'126\', \'Google Chrome\';v=\'126\'')&#13;
                .header('Sec-Ch-Ua-Mobile', '?0')&#13;
                .header('Sec-Ch-Ua-Platform', '\'Windows\'')&#13;
                .header('Sec-Fetch-Dest', 'iframe')&#13;
                .header('Sec-Fetch-Mode', 'navigate')&#13;
                .header('Sec-Fetch-Site', 'same-origin')&#13;
                .header('Sec-Fetch-User', '?1')&#13;
                .header('Upgrade-Insecure-Requests', '1')&#13;
                .header('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36')&#13;
                .execute().body();&#13;
        Document doc=Jsoup.parse(html);&#13;
        Elements elements=doc.select('body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div');&#13;
        if(CollUtil.isNotEmpty(elements)){&#13;
            int i=0;&#13;
            for(Element e:elements){&#13;
                i++;&#13;
                String magnet=doc.select(&#13;
                        'body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div:nth-child('+i+') &gt; div.sbar &gt; span:nth-child(1) &gt; a').get(0).attr('href');&#13;
                magnets.append(magnet+'\n');&#13;
                doc.select(&#13;
                        'body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div:nth-child('+i+')').append('&lt;button class=\'btn\' data-clipboard-demo=\'\' ' +&#13;
                        'data-clipboard-action=\'copy\' data-clipboard-text=\''&#13;
                        +magnet+'\'&gt;点击复制磁力链接&lt;/button&gt;&lt;br&gt;\n');&#13;
            }&#13;
            doc.select(&#13;
                    'body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div:nth-child('+i+')').append('&lt;button class=\'btn\' data-clipboard-demo=\'\' ' +&#13;
                    'data-clipboard-action=\'copy\' data-clipboard-text=\''&#13;
                    +magnets.toString()+'\'&gt;点击复制本页所有磁力链接&lt;/button&gt;&lt;br&gt;\n');&#13;
        }else{&#13;
            doc.append('&lt;font size=\'3\' color=\'red\'&gt;无资源&lt;/font&gt;&lt;br&gt;\n');&#13;
        }&#13;
        return doc.select('body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6)').html();&#13;
    }&#13;
 @Data&#13;
    public static class QueryVo {&#13;
        private String k;&#13;
        private String url;&#13;
        private Integer p;&#13;
    }&#13;
```&#13;
```&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;cn.hutool&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;&#13;
            &lt;version&gt;5.7.14&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;org.jsoup&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;jsoup&lt;/artifactId&gt;&#13;
            &lt;version&gt;1.16.1&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
### html引用clipboard.min.js就可以实现一键复制。</description><guid isPermaLink="true">https://qigaowei.github.io/post/ci-li-yi-jian-fu-zhi-yuan-ma.html</guid><pubDate>Fri, 26 Jul 2024 00:28:28 +0000</pubDate></item><item><title>各种在线视频下载-简单免费</title><link>https://qigaowei.github.io/post/ge-zhong-zai-xian-shi-pin-xia-zai---jian-dan-mian-fei.html</link><description>##  1获取m3u8地址&#13;
###  谷歌浏览器搜插件Video DownloadHelper&#13;
##  2下载工具&#13;
###  https://github.com/nilaoda/N_m3u8DL-CLI&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/ge-zhong-zai-xian-shi-pin-xia-zai---jian-dan-mian-fei.html</guid><pubDate>Thu, 25 Jul 2024 09:12:54 +0000</pubDate></item><item><title>docker镜像国内可用地址</title><link>https://qigaowei.github.io/post/docker-jing-xiang-guo-nei-ke-yong-di-zhi.html</link><description>### https://github.com/docker-practice/docker-registry-cn-mirror-test&#13;
### 测试结果请到 Actions 标签详情页查看。</description><guid isPermaLink="true">https://qigaowei.github.io/post/docker-jing-xiang-guo-nei-ke-yong-di-zhi.html</guid><pubDate>Thu, 25 Jul 2024 09:09:39 +0000</pubDate></item><item><title>idea提升运行速度-效果非常明显</title><link>https://qigaowei.github.io/post/idea-ti-sheng-yun-xing-su-du---xiao-guo-fei-chang-ming-xian.html</link><description>File----&gt;Setting----&gt;Editor----&gt;Inlay Hints----&gt;Code vision----&gt;取消勾选所有（可逆）&#13;
关闭以上设置，可以减少内存占用，提升运行速度，适合低配置电脑。</description><guid isPermaLink="true">https://qigaowei.github.io/post/idea-ti-sheng-yun-xing-su-du---xiao-guo-fei-chang-ming-xian.html</guid><pubDate>Thu, 25 Jul 2024 09:06:44 +0000</pubDate></item><item><title>@Transactional的使用</title><link>https://qigaowei.github.io/post/%40Transactional-de-shi-yong.html</link><description>### @Transactional(rollbackFor = Exception.class)&#13;
### 必须指定Exception.class，要不会回滚失败。</description><guid isPermaLink="true">https://qigaowei.github.io/post/%40Transactional-de-shi-yong.html</guid><pubDate>Thu, 25 Jul 2024 06:46:37 +0000</pubDate></item><item><title>feign接口配置指定ip</title><link>https://qigaowei.github.io/post/feign-jie-kou-pei-zhi-zhi-ding-ip.html</link><description>###  feign 接口直连地址 只配置url所有接口都生效，单个服务配置urls下面的具体服务&#13;
&#13;
```&#13;
feign:&#13;
  service:&#13;
    url: 192.168.0.175&#13;
    urls:&#13;
      his-storage-service: 192.168.0.175&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/feign-jie-kou-pei-zhi-zhi-ding-ip.html</guid><pubDate>Thu, 25 Jul 2024 06:40:10 +0000</pubDate></item><item><title>oracle对字段添加备注</title><link>https://qigaowei.github.io/post/oracle-dui-zi-duan-tian-jia-bei-zhu.html</link><description>COMMENT ON COLUMN TABLE_NAME.green_channel_flag IS '备注';。</description><guid isPermaLink="true">https://qigaowei.github.io/post/oracle-dui-zi-duan-tian-jia-bei-zhu.html</guid><pubDate>Thu, 25 Jul 2024 06:37:20 +0000</pubDate></item><item><title>mybatisplus中的查询</title><link>https://qigaowei.github.io/post/mybatisplus-zhong-de-cha-xun.html</link><description>```&#13;
LambdaQueryWrapper&lt;NsAbc&gt; lambdaQueryWrapper = Wrappers.lambdaQuery();&#13;
		lambdaQueryWrapper.eq(NsAbc::getId,dto.getId());&#13;
		List&lt;NsAbc&gt; nsAbcs=nsAbcMapper.selectList(lambdaQueryWrapper);&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatisplus-zhong-de-cha-xun.html</guid><pubDate>Thu, 25 Jul 2024 06:35:32 +0000</pubDate></item><item><title>oracle的sql中需要对日期进行处理</title><link>https://qigaowei.github.io/post/oracle-de-sql-zhong-xu-yao-dui-ri-qi-jin-xing-chu-li.html</link><description>INSERT INTO table_name （CREATE_TIME）VALUES（TIMESTAMP '2024-01-15 08:41:00.000000'）；。</description><guid isPermaLink="true">https://qigaowei.github.io/post/oracle-de-sql-zhong-xu-yao-dui-ri-qi-jin-xing-chu-li.html</guid><pubDate>Thu, 25 Jul 2024 06:31:15 +0000</pubDate></item><item><title>接口优化中的sql查询优化，秒级到毫秒级</title><link>https://qigaowei.github.io/post/jie-kou-you-hua-zhong-de-sql-cha-xun-you-hua-%EF%BC%8C-miao-ji-dao-hao-miao-ji.html</link><description>### 1循环很多次执行sql，才有优化的空间，执行sql操作次数太少，优化空间不大&#13;
### 2多条sql查询，可以用union拼起来，只执行一条。</description><guid isPermaLink="true">https://qigaowei.github.io/post/jie-kou-you-hua-zhong-de-sql-cha-xun-you-hua-%EF%BC%8C-miao-ji-dao-hao-miao-ji.html</guid><pubDate>Thu, 25 Jul 2024 00:58:47 +0000</pubDate></item><item><title>mybatisplus优化小tips</title><link>https://qigaowei.github.io/post/mybatisplus-you-hua-xiao-tips.html</link><description>### 批量insert，可以一条语句执行&#13;
### 批量update，不行&#13;
### 建议使用批量insert，这样可以加快sql执行速度。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatisplus-you-hua-xiao-tips.html</guid><pubDate>Thu, 25 Jul 2024 00:47:50 +0000</pubDate></item><item><title>js与vue总结</title><link>https://qigaowei.github.io/post/js-yu-vue-zong-jie.html</link><description>1const checkedRows = ref([])&#13;
获取用checkedRows.value&#13;
2新增修改删除以后需要调用list接口&#13;
3变量定义在使用地方的前面&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/js-yu-vue-zong-jie.html</guid><pubDate>Wed, 24 Jul 2024 06:56:33 +0000</pubDate></item><item><title>采用AIGC，极大提升工作效率</title><link>https://qigaowei.github.io/post/cai-yong-AIGC%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</link><description>### 如通义千问，生成建表sql&#13;
### 通过原型图生成oracle表sql和备注，&#13;
### 对于字段比较多的表，&#13;
### 节省时间20分钟以上。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cai-yong-AIGC%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</guid><pubDate>Wed, 17 Jul 2024 06:51:38 +0000</pubDate></item><item><title>采用idea的JRebel插件，极大提升工作效率</title><link>https://qigaowei.github.io/post/cai-yong-idea-de-JRebel-cha-jian-%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</link><description>### 采用idea的JRebel插件，&#13;
### 一键更新本地代码，&#13;
### 不用重启SpringBoot&#13;
### 每次可以节省几分钟&#13;
&#13;
## 必须重启的情况&#13;
### 1MQ，修改了consumerGroup，@RocketMQMessageListener(consumerGroup=&#13;
### 2com.baomidou.mybatisplus.extension.service.IService#saveBatch(java.util.Collection&lt;T&gt;)，使用此方法时，修改了实体类。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cai-yong-idea-de-JRebel-cha-jian-%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</guid><pubDate>Wed, 17 Jul 2024 06:49:57 +0000</pubDate></item><item><title>Mybatis union 循环</title><link>https://qigaowei.github.io/post/Mybatis%20union%20-xun-huan.html</link><description>```&#13;
&lt;foreach collection='nameList' item='name' separator='union'&gt;&#13;
		select id  from table where name = #{name}&#13;
	&lt;/foreach&gt;&#13;
```&#13;
 ``` &#13;
   List&lt;Object&gt; getList(@Param('nameList')String[] nameList);  &#13;
```&#13;
### 优化接口，使用union，&#13;
### 加上索引，提高接口响应速度&#13;
### in有数量限制，可能不走索引&#13;
### EXISTS也可以，但是union的写法最简单&#13;
### UNION ALL会有重复数据。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Mybatis%20union%20-xun-huan.html</guid><pubDate>Wed, 17 Jul 2024 06:49:26 +0000</pubDate></item><item><title>springboot过滤器</title><link>https://qigaowei.github.io/post/springboot-guo-lv-qi.html</link><description>```&#13;
package com.abc.bigdata.riskmanagement.filter;&#13;
&#13;
import lombok.extern.slf4j.Slf4j;&#13;
import org.apache.skywalking.apm.toolkit.trace.TraceContext;&#13;
import org.springframework.web.filter.OncePerRequestFilter;&#13;
&#13;
import javax.servlet.FilterChain;&#13;
import javax.servlet.ServletException;&#13;
import javax.servlet.annotation.WebFilter;&#13;
import javax.servlet.http.HttpServletRequest;&#13;
import javax.servlet.http.HttpServletResponse;&#13;
import java.io.IOException;&#13;
&#13;
@Slf4j&#13;
@WebFilter(filterName = 'thirdFilter',urlPatterns = {'/value/tycCompanyBase'&#13;
})&#13;
public class ThirdFilter extends OncePerRequestFilter {&#13;
&#13;
    @Override&#13;
    protected void doFilterInternal(HttpServletRequest request,&#13;
                                    HttpServletResponse response,&#13;
                                    FilterChain chain) throws IOException, ServletException {&#13;
        String url=request.getServletPath();&#13;
        String traceId= TraceContext.traceId();&#13;
        log.error(url+traceId);&#13;
        chain.doFilter(request, response);&#13;
    }&#13;
&#13;
}&#13;
```&#13;
&#13;
### springboot启动类要加入注解&#13;
```&#13;
@ServletComponentScan(basePackages = {'com.abc.bigdata.riskmanagement.filter'})&#13;
```&#13;
&#13;
### 过滤器注册为@Component导致urlPatterns不生效&#13;
&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/springboot-guo-lv-qi.html</guid><pubDate>Wed, 17 Jul 2024 06:36:05 +0000</pubDate></item><item><title>Feign绕过SSL验证的方案，Feign调用https接口，亲测可用，引入包非常少，非常简单</title><link>https://qigaowei.github.io/post/Feign-rao-guo-SSL-yan-zheng-de-fang-an-%EF%BC%8CFeign-diao-yong-https-jie-kou-%EF%BC%8C-qin-ce-ke-yong-%EF%BC%8C-yin-ru-bao-fei-chang-shao-%EF%BC%8C-fei-chang-jian-dan.html</link><description>```&#13;
import feign.Client;&#13;
import feign.Feign;&#13;
import org.apache.http.conn.ssl.NoopHostnameVerifier;&#13;
import org.springframework.context.annotation.Bean;&#13;
import org.springframework.context.annotation.Configuration;&#13;
&#13;
import javax.net.ssl.*;&#13;
&#13;
/**&#13;
 * Feign配置，使其支持https&#13;
 */&#13;
@Configuration&#13;
public class FeignConfiguration {&#13;
&#13;
    @Bean&#13;
    public Feign.Builder feignBuilder() {&#13;
        final Client trustSSLSockets = client();&#13;
        return Feign.builder().client(trustSSLSockets);&#13;
    }&#13;
&#13;
    public static SSLSocketFactory feignTrustingSSLSocketFactory = null;&#13;
&#13;
    @Bean&#13;
    public Client client() {&#13;
        if(feignTrustingSSLSocketFactory==null){&#13;
            try {&#13;
                feignTrustingSSLSocketFactory = getFeignTrustingSSLSocketFactory();&#13;
            } catch (Exception e) {&#13;
                e.printStackTrace();&#13;
            }&#13;
        }&#13;
        Client client= new Client.Default(feignTrustingSSLSocketFactory, new NoopHostnameVerifier());&#13;
        return client;&#13;
    }&#13;
&#13;
    public static SSLSocketFactory getFeignTrustingSSLSocketFactory() throws Exception {&#13;
        javax.net.ssl.TrustManager[] trustAllCerts = new javax.net.ssl.TrustManager[1];&#13;
        javax.net.ssl.TrustManager tm = new miTM();&#13;
        trustAllCerts[0] = tm;&#13;
        javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext.getInstance('SSL');&#13;
        sc.init(null, trustAllCerts, null);&#13;
        return sc.getSocketFactory();&#13;
    }&#13;
    static class miTM implements javax.net.ssl.TrustManager, javax.net.ssl.X509TrustManager {&#13;
        public java.security.cert.X509Certificate[] getAcceptedIssuers() {&#13;
            return null;&#13;
        }&#13;
&#13;
        public boolean isServerTrusted(java.security.cert.X509Certificate[] certs) {&#13;
            return true;&#13;
        }&#13;
&#13;
        public boolean isClientTrusted(java.security.cert.X509Certificate[] certs) {&#13;
            return true;&#13;
        }&#13;
&#13;
        public void checkServerTrusted(java.security.cert.X509Certificate[] certs, String authType)&#13;
                throws java.security.cert.CertificateException {&#13;
            return;&#13;
        }&#13;
&#13;
        public void checkClientTrusted(java.security.cert.X509Certificate[] certs, String authType)&#13;
                throws java.security.cert.CertificateException {&#13;
            return;&#13;
        }&#13;
    }&#13;
&#13;
}&#13;
```&#13;
```&#13;
  &lt;dependency&gt;&#13;
            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;&#13;
        &lt;/dependency&gt;&#13;
&lt;dependency&gt;&#13;
            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;httpclient&lt;/artifactId&gt;&#13;
            &lt;version&gt;4.5.13&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
```&#13;
@Component&#13;
@FeignClient(name = 'NgfwApiFeign', url = 'https://fakeAIMASKurl', configuration = FeignConfiguration.class)&#13;
public interface NgfwApiFeign {&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Feign-rao-guo-SSL-yan-zheng-de-fang-an-%EF%BC%8CFeign-diao-yong-https-jie-kou-%EF%BC%8C-qin-ce-ke-yong-%EF%BC%8C-yin-ru-bao-fei-chang-shao-%EF%BC%8C-fei-chang-jian-dan.html</guid><pubDate>Wed, 17 Jul 2024 06:35:36 +0000</pubDate></item><item><title>mysql自定义排序</title><link>https://qigaowei.github.io/post/mysql-zi-ding-yi-pai-xu.html</link><description>```&#13;
CREATE TABLE `partner_company` (&#13;
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT '数据库主键',&#13;
  `model_credit_grade` varchar(32) DEFAULT NULL COMMENT '最近一次模型结果信用评级',&#13;
  PRIMARY KEY (`id`)&#13;
) ENGINE=InnoDB AUTO_INCREMENT=2669 DEFAULT CHARSET=utf8mb3;&#13;
```&#13;
```&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('1', 'AAA');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('2', 'AA');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('3', 'A');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('4', 'BBB');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('5', 'BB');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('6', 'B');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('7', NULL);&#13;
```&#13;
下面sql为null值排最后&#13;
&#13;
&#13;
&#13;
```&#13;
SELECT&#13;
	model_credit_grade&#13;
FROM&#13;
	partner_company&#13;
ORDER BY&#13;
	ISNULL(model_credit_grade) || model_credit_grade = '',&#13;
	field(&#13;
		model_credit_grade,&#13;
		'AAA',&#13;
		'AA',&#13;
		'A',&#13;
		'BBB',&#13;
		'BB',&#13;
		'B',&#13;
		''&#13;
	)&#13;
```&#13;
![在这里插入图片描述](https://img-blog.csdnimg.cn/70b4603a5d63459091cb27a51b29d470.png)&#13;
&#13;
&#13;
	下面sql为null值排最前&#13;
&#13;
```&#13;
SELECT&#13;
	model_credit_grade&#13;
FROM&#13;
	partner_company&#13;
ORDER BY&#13;
	field(&#13;
		model_credit_grade,&#13;
		'',&#13;
		'B',&#13;
		'BB',&#13;
		'BBB',&#13;
		'A',&#13;
		'AA',&#13;
		'AAA'&#13;
	),&#13;
	ISNULL(model_credit_grade) || model_credit_grade = ''&#13;
```&#13;
&#13;
&#13;
&#13;
&#13;
![在这里插入图片描述](https://img-blog.csdnimg.cn/6be349d2deac436d87c5108608d30179.png)。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mysql-zi-ding-yi-pai-xu.html</guid><pubDate>Wed, 17 Jul 2024 06:35:07 +0000</pubDate></item><item><title>将子网转为ip范围</title><link>https://qigaowei.github.io/post/jiang-zi-wang-zhuan-wei-ip-fan-wei.html</link><description>```&#13;
&lt;dependency&gt;&#13;
            &lt;groupId&gt;commons-net&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;commons-net&lt;/artifactId&gt;&#13;
            &lt;version&gt;3.6&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
&#13;
```&#13;
          private static List&lt;String&gt; cidrToIpList(String cidr){&#13;
        SubnetUtils utils = new SubnetUtils(cidr);&#13;
        String[] adress = utils.getInfo().getAllAddresses();&#13;
        return Arrays.asList(adress);&#13;
    }&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/jiang-zi-wang-zhuan-wei-ip-fan-wei.html</guid><pubDate>Wed, 17 Jul 2024 06:34:46 +0000</pubDate></item><item><title>git强制回滚</title><link>https://qigaowei.github.io/post/git-qiang-zhi-hui-gun.html</link><description>```&#13;
git reset --hard 4586e7b93cf81db1fe421bd52fdbf6371fd207d3&#13;
git push -f&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/git-qiang-zhi-hui-gun.html</guid><pubDate>Wed, 17 Jul 2024 06:34:20 +0000</pubDate></item><item><title>从List删除元素，需要注意的点</title><link>https://qigaowei.github.io/post/cong-List-shan-chu-yuan-su-%EF%BC%8C-xu-yao-zhu-yi-de-dian.html</link><description>```java&#13;
     List&lt;String&gt; list=new ArrayList&lt;String&gt;();&#13;
        list.add('1');&#13;
        list.add('2');&#13;
        list.add('3');&#13;
        list.add('4');&#13;
        for(String str : list){&#13;
            if('3'.equals(str)){&#13;
                list.remove(str);&#13;
            }&#13;
            System.out.println(str);//代表业务逻辑&#13;
        }&#13;
        System.out.println();&#13;
        for(String str : list){&#13;
            System.out.println(str);&#13;
        }&#13;
```&#13;
结果如下，第一个for循环，4没有打印出来需要注意&#13;
1&#13;
2&#13;
3&#13;
&#13;
1&#13;
2&#13;
4&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cong-List-shan-chu-yuan-su-%EF%BC%8C-xu-yao-zhu-yi-de-dian.html</guid><pubDate>Wed, 17 Jul 2024 06:33:53 +0000</pubDate></item><item><title>git从主干拉取新分支</title><link>https://qigaowei.github.io/post/git-cong-zhu-gan-la-qu-xin-fen-zhi.html</link><description>```&#13;
git checkout master&#13;
git checkout -b enterprise1.2.1&#13;
git push origin enterprise1.2.1:enterprise1.2.1&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/git-cong-zhu-gan-la-qu-xin-fen-zhi.html</guid><pubDate>Wed, 17 Jul 2024 06:32:51 +0000</pubDate></item><item><title>swagger不支持泛型返回值的解决方法</title><link>https://qigaowei.github.io/post/swagger-bu-zhi-chi-fan-xing-fan-hui-zhi-de-jie-jue-fang-fa.html</link><description>#### 公司使用apifox给前端提供接口文档，&#13;
#### 我先通过http://localhost:9604/v2/api-docs导出swagger的json格式，&#13;
#### 然后再导入到apifox，&#13;
#### 结果接口返回值的泛型里面的字段不显示。</description><guid isPermaLink="true">https://qigaowei.github.io/post/swagger-bu-zhi-chi-fan-xing-fan-hui-zhi-de-jie-jue-fang-fa.html</guid><pubDate>Wed, 17 Jul 2024 06:32:13 +0000</pubDate></item><item><title>小七的博客</title><link>https://qigaowei.github.io/post/xiao-qi-de-bo-ke.html</link><description>小七的博客。</description><guid isPermaLink="true">https://qigaowei.github.io/post/xiao-qi-de-bo-ke.html</guid><pubDate>Wed, 17 Jul 2024 06:25:59 +0000</pubDate></item></channel></rss>