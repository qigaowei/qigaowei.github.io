<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>小七的博客</title><link>https://qigaowei.github.io</link><description>Blog description</description><copyright>小七的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://qigaowei.github.io</link></image><lastBuildDate>Thu, 06 Feb 2025 09:17:54 +0000</lastBuildDate><managingEditor>小七的博客</managingEditor><ttl>60</ttl><webMaster>小七的博客</webMaster><item><title>阿里规范常见注意事项</title><link>https://qigaowei.github.io/post/a-li-gui-fan-chang-jian-zhu-yi-shi-xiang.html</link><description>1. Object的equals方法容易抛空指针异常，应使用常量或确定有值的对象来调用equals。</description><guid isPermaLink="true">https://qigaowei.github.io/post/a-li-gui-fan-chang-jian-zhu-yi-shi-xiang.html</guid><pubDate>Thu, 06 Feb 2025 09:17:25 +0000</pubDate></item><item><title>开源软件常用下载网址</title><link>https://qigaowei.github.io/post/kai-yuan-ruan-jian-chang-yong-xia-zai-wang-zhi.html</link><description>[redis-windows](https://github.com/redis-windows/redis-windows/releases)
[批量投简历-前端版](https://github.com/yangfeng20/boss_batch_push)
[BT种子网站](u3c3.com)。</description><guid isPermaLink="true">https://qigaowei.github.io/post/kai-yuan-ruan-jian-chang-yong-xia-zai-wang-zhi.html</guid><pubDate>Thu, 06 Feb 2025 03:00:21 +0000</pubDate></item><item><title>selenium中ChromeDriver，要加锁</title><link>https://qigaowei.github.io/post/selenium-zhong-ChromeDriver%EF%BC%8C-yao-jia-suo.html</link><description>- 所有链接用一个ChromeDriver 就行了
- 但是要加锁，要不session和窗口容易冲突

。</description><guid isPermaLink="true">https://qigaowei.github.io/post/selenium-zhong-ChromeDriver%EF%BC%8C-yao-jia-suo.html</guid><pubDate>Fri, 17 Jan 2025 10:58:52 +0000</pubDate></item><item><title>在ubuntu中使用java调用selenium</title><link>https://qigaowei.github.io/post/zai-ubuntu-zhong-shi-yong-java-diao-yong-selenium.html</link><description>1. 安装 Chrome
```shell
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo dpkg -i google-chrome-stable_current_amd64.deb
# 检查版本
google-chrome --version
```
2. 无法安装使用
```shell
sudo apt-get install -f
```
3. 安装chromedriver 
```shell
unzip chromedriver_linux64.zip
sudo mv -f chromedriver /usr/local/share/chromedriver
sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver
sudo ln -s /usr/local/share/chromedriver /usr/bin/chromedriver
chromedriver --version
```
4. java配置
```java
options.setBinary('/opt/google/chrome/chrome');
 System.setProperty('webdriver.chrome.driver', '/usr/local/share/chromedriver');
options.addArguments('--headless'); //使用无头模式
options.addArguments('--disable-javascript');
```

参考网站
- https://blog.csdn.net/weixin_44184990/article/details/123590435

。</description><guid isPermaLink="true">https://qigaowei.github.io/post/zai-ubuntu-zhong-shi-yong-java-diao-yong-selenium.html</guid><pubDate>Fri, 17 Jan 2025 08:31:56 +0000</pubDate></item><item><title>Ubuntu安装docker</title><link>https://qigaowei.github.io/post/Ubuntu-an-zhuang-docker.html</link><description>1. 
```shell
curl -fsSL https://test.docker.com/ -o test-docker.sh
 sudo sh test-docker.sh
# 创建目录
sudo mkdir -p /etc/docker
# 写入配置文件
sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'
{

    'registry-mirrors': [

    'http://cf-workers-docker-io-2cl.pages.dev/',
'http://dockerhub.timeweb.cloud/',
'http://docker.ketches.cn/',
'http://docker.m.daocloud.io/'

    ]

}

EOF
# 重启docker服务
sudo systemctl daemon-reload 
# 等一会再执行
 sudo systemctl restart docker
```
2. 出问题查看日志
```shell
sudo journalctl -u docker.service
```
3. /etc/docker/daemon.json配置文件一定包含http://。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Ubuntu-an-zhuang-docker.html</guid><pubDate>Fri, 17 Jan 2025 02:37:35 +0000</pubDate></item><item><title>医疗测试时-不能把病人诊断为伤寒等传染病</title><link>https://qigaowei.github.io/post/yi-liao-ce-shi-shi---bu-neng-ba-bing-ren-zhen-duan-wei-shang-han-deng-chuan-ran-bing.html</link><guid isPermaLink="true">https://qigaowei.github.io/post/yi-liao-ce-shi-shi---bu-neng-ba-bing-ren-zhen-duan-wei-shang-han-deng-chuan-ran-bing.html</guid><pubDate>Tue, 07 Jan 2025 07:36:38 +0000</pubDate></item><item><title>Docker 安装MySQL</title><link>https://qigaowei.github.io/post/Docker%20-an-zhuang-MySQL.html</link><description>```shell&#13;
docker pull mysql:5.7&#13;
# docker pull mysql:8&#13;
&#13;
mkdir -p /data/mysql/log&#13;
mkdir -p /data/mysql/data&#13;
mkdir -p /data/mysql/conf.d&#13;
echo '' &gt; /data/mysql/my.cnf&#13;
&#13;
ls -la /data/mysql&#13;
&#13;
docker run --name mysql \&#13;
--restart=always \&#13;
-p 3306:3306 \&#13;
-v /data/mysql/log:/var/log/mysql \&#13;
-v /data/mysql/data:/var/lib/mysql \&#13;
-v /data/mysql/conf.d:/etc/mysql/conf.d \&#13;
-v /data/mysql/my.cnf:/etc/my.cnf \&#13;
-e MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} \&#13;
-d mysql:5.7&#13;
&#13;
```&#13;
&#13;
- 在宿主机中执行 mysql 容器 的 命令&#13;
```shell&#13;
docker exec -it mysql bash&#13;
&gt; mysql -uroot -p${MYSQL_ROOT_PASSWORD} --port=3306 -h127.0.0.1 -e 'show databases;'&#13;
&gt; exit&#13;
&#13;
```&#13;
&#13;
参考https://www.cnblogs.com/johnnyzen/p/18077425。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Docker%20-an-zhuang-MySQL.html</guid><pubDate>Fri, 03 Jan 2025 01:17:14 +0000</pubDate></item><item><title>Ubuntu Docker 安装与配置源</title><link>https://qigaowei.github.io/post/Ubuntu%20Docker%20-an-zhuang-yu-pei-zhi-yuan.html</link><description>```shell&#13;
 curl -fsSL https://test.docker.com -o test-docker.sh&#13;
 sudo sh test-docker.sh&#13;
```&#13;
&#13;
```shell&#13;
# 创建目录&#13;
&#13;
sudo mkdir -p /etc/docker&#13;
&#13;
&#13;
# 写入配置文件&#13;
&#13;
sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'&#13;
&#13;
{&#13;
&#13;
    'registry-mirrors': [&#13;
&#13;
    	'https://改成自己的.mirror.aliyuncs.com'&#13;
&#13;
    ]&#13;
&#13;
}&#13;
&#13;
EOF&#13;
&#13;
# 重启docker服务&#13;
&#13;
sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Ubuntu%20Docker%20-an-zhuang-yu-pei-zhi-yuan.html</guid><pubDate>Fri, 03 Jan 2025 01:11:44 +0000</pubDate></item><item><title>网页在4k分辨率下，右上角的关闭按钮显示不出来</title><link>https://qigaowei.github.io/post/wang-ye-zai-4k-fen-bian-lv-xia-%EF%BC%8C-you-shang-jiao-de-guan-bi-an-niu-xian-shi-bu-chu-lai.html</link><description>1. 右键点击 Chrome 快捷方式 &gt; 属性&#13;
2. 在 目标 字段末尾添加以下参数：&#13;
 --window-size=1920,1080 --force-device-scale-factor=1.5&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/wang-ye-zai-4k-fen-bian-lv-xia-%EF%BC%8C-you-shang-jiao-de-guan-bi-an-niu-xian-shi-bu-chu-lai.html</guid><pubDate>Thu, 26 Dec 2024 07:47:40 +0000</pubDate></item><item><title>idea，选中变量高亮，可以改成自己喜欢的颜色</title><link>https://qigaowei.github.io/post/idea%EF%BC%8C-xuan-zhong-bian-liang-gao-liang-%EF%BC%8C-ke-yi-gai-cheng-zi-ji-xi-huan-de-yan-se.html</link><description>![image](https://github.com/user-attachments/assets/4d1fdd55-76d2-4e24-9e16-fe04a6f8ff5a)&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/idea%EF%BC%8C-xuan-zhong-bian-liang-gao-liang-%EF%BC%8C-ke-yi-gai-cheng-zi-ji-xi-huan-de-yan-se.html</guid><pubDate>Mon, 23 Dec 2024 04:02:53 +0000</pubDate></item><item><title>变量的前两个字母要么全部大写，要么全部小写</title><link>https://qigaowei.github.io/post/bian-liang-de-qian-liang-ge-zi-mu-yao-me-quan-bu-da-xie-%EF%BC%8C-yao-me-quan-bu-xiao-xie.html</link><description>```java&#13;
import lombok.Data;&#13;
@Data&#13;
   private List&lt;THdMonitorDtl&gt; tHdMonitorDtls;&#13;
   private List&lt;THdMonitorDtl&gt; hdMonitorDtls;&#13;
   private Long kCon;&#13;
   private Long kaCon;&#13;
```&#13;
&#13;
- 都是第一个无法赋值。</description><guid isPermaLink="true">https://qigaowei.github.io/post/bian-liang-de-qian-liang-ge-zi-mu-yao-me-quan-bu-da-xie-%EF%BC%8C-yao-me-quan-bu-xiao-xie.html</guid><pubDate>Tue, 17 Dec 2024 08:52:36 +0000</pubDate></item><item><title>new FileOutputStream(file)不能作为参数</title><link>https://qigaowei.github.io/post/new%20FileOutputStream%28file%29-bu-neng-zuo-wei-can-shu.html</link><description>```java&#13;
e.start(new FileOutputStream(file));&#13;
```&#13;
- 这样写，无法close();&#13;
- 正确的如下&#13;
```java&#13;
try {&#13;
            out=new FileOutputStream(file);&#13;
            e.start(out);&#13;
        } catch (Exception ex) {&#13;
            log.error('',ex);&#13;
        }finally {&#13;
            e.finish();&#13;
            out.close();&#13;
        }&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/new%20FileOutputStream%28file%29-bu-neng-zuo-wei-can-shu.html</guid><pubDate>Tue, 10 Dec 2024 09:07:41 +0000</pubDate></item><item><title>类似Excel的表格的页面，最好前端传回全部数据</title><link>https://qigaowei.github.io/post/lei-si-Excel-de-biao-ge-de-ye-mian-%EF%BC%8C-zui-hao-qian-duan-chuan-hui-quan-bu-shu-ju.html</link><description>- 这种页面的功能，有可能是把一个位置的数据，移动到另一个位置&#13;
- 最好操作这一系列的数据以后，点保存后，将全部的数据一次性传给后端&#13;
- 后端可以使用先删除后新增&#13;
- 这种前后端，逻辑都很简单。</description><guid isPermaLink="true">https://qigaowei.github.io/post/lei-si-Excel-de-biao-ge-de-ye-mian-%EF%BC%8C-zui-hao-qian-duan-chuan-hui-quan-bu-shu-ju.html</guid><pubDate>Mon, 02 Dec 2024 00:28:26 +0000</pubDate></item><item><title>mysql-网址怎么创建索引</title><link>https://qigaowei.github.io/post/mysql--wang-zhi-zen-me-chuang-jian-suo-yin.html</link><description>- 可以存一份网址的原文&#13;
- 再存一份网址的md5&#13;
- 查询时可以用md5查询&#13;
- 不过查询时一定要用java转md5，不要用mysql的函数&#13;
- 使用函数不走索引。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mysql--wang-zhi-zen-me-chuang-jian-suo-yin.html</guid><pubDate>Mon, 02 Dec 2024 00:24:09 +0000</pubDate></item><item><title>单独写一下，日志没打印出来的原因</title><link>https://qigaowei.github.io/post/dan-du-xie-yi-xia-%EF%BC%8C-ri-zhi-mei-da-yin-chu-lai-de-yuan-yin.html</link><description>- e.printStackTrace();&#13;
-  正式环境不要用这个代码，&#13;
- 这样写只会往控制台打印，&#13;
- 用 log.error('', e)。</description><guid isPermaLink="true">https://qigaowei.github.io/post/dan-du-xie-yi-xia-%EF%BC%8C-ri-zhi-mei-da-yin-chu-lai-de-yuan-yin.html</guid><pubDate>Wed, 06 Nov 2024 09:43:51 +0000</pubDate></item><item><title>日期相关的代码优化，获取指定日期，指定小时和分钟的时间</title><link>https://qigaowei.github.io/post/ri-qi-xiang-guan-de-dai-ma-you-hua-%EF%BC%8C-huo-qu-zhi-ding-ri-qi-%EF%BC%8C-zhi-ding-xiao-shi-he-fen-zhong-de-shi-jian.html</link><description>1.  源代码&#13;
- time为11:24&#13;
```java&#13;
private Date generationFreqTime(Date execDate, String time) {&#13;
		Calendar calendar = Calendar.getInstance();&#13;
		calendar.setTime(execDate);&#13;
		try {&#13;
			String[] tems = time.split(':');&#13;
			calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(tems[0]));&#13;
			calendar.set(Calendar.MINUTE, Integer.parseInt(tems[1]));&#13;
			calendar.set(Calendar.SECOND, 0);&#13;
		} catch (NumberFormatException e) {&#13;
			e.printStackTrace();&#13;
			calendar.set(Calendar.HOUR_OF_DAY, 8);&#13;
			calendar.set(Calendar.MINUTE, 0);&#13;
			calendar.set(Calendar.SECOND, 0);&#13;
		}&#13;
		return calendar.getTime();&#13;
	}&#13;
```&#13;
2. 优化后&#13;
-上面优化前，下面优化后&#13;
```java&#13;
private Date generationFreqTime(Date execDate, String time) {&#13;
	return DateUtil.parse(DateUtil.format(execDate,'yyyyMMdd'+time.replace(':')+'00'));&#13;
}&#13;
```&#13;
```java&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;cn.hutool&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;&#13;
            &lt;version&gt;5.7.14&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
&#13;
3. 应用,A股的时间&#13;
```java&#13;
Date date=new Date();&#13;
        Date time9=DateUtil.parse(DateUtil.format(date,'yyyyMMdd093000'));&#13;
        Date time11=DateUtil.parse(DateUtil.format(date,'yyyyMMdd113000'));&#13;
        Date time13=DateUtil.parse(DateUtil.format(date,'yyyyMMdd130000'));&#13;
        Date time15=DateUtil.parse(DateUtil.format(date,'yyyyMMdd150000'));&#13;
        if((date.after(time9)&amp;&amp;date.before(time11))&#13;
        ||(date.after(time13)&amp;&amp;date.before(time15))){&#13;
&#13;
}&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/ri-qi-xiang-guan-de-dai-ma-you-hua-%EF%BC%8C-huo-qu-zhi-ding-ri-qi-%EF%BC%8C-zhi-ding-xiao-shi-he-fen-zhong-de-shi-jian.html</guid><pubDate>Wed, 06 Nov 2024 06:45:59 +0000</pubDate></item><item><title>问题排查小计</title><link>https://qigaowei.github.io/post/wen-ti-pai-cha-xiao-ji.html</link><description>1. 发现事务回滚了，又没有明显的报错代码&#13;
2. 跟踪日志，发现到了一个位置，往下的日志没了，怀疑问题出现在这&#13;
3. 发现这段代码基本都是get，只有一个地方是数据处理的&#13;
4. 跟踪代码中calendar.setTime(a)的位置的参数，发现a为null&#13;
5. 写个测试用例，发现空指针，代码在下面&#13;
6. 排查结束&#13;
7. e.printStackTrace();   正式环境不要用这个代码，这样写只会往控制台打印，用 log.error('', e)&#13;
```java&#13;
   Calendar calendar = Calendar.getInstance();&#13;
        calendar.setTime(null);&#13;
        try {&#13;
            String[] tems = '11:41'.split(':');&#13;
            calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(tems[0]));&#13;
            calendar.set(Calendar.MINUTE, Integer.parseInt(tems[1]));&#13;
            calendar.set(Calendar.SECOND, 0);&#13;
        } catch (NumberFormatException e) {&#13;
            e.printStackTrace();&#13;
            calendar.set(Calendar.HOUR_OF_DAY, 8);&#13;
            calendar.set(Calendar.MINUTE, 0);&#13;
            calendar.set(Calendar.SECOND, 0);&#13;
        }&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/wen-ti-pai-cha-xiao-ji.html</guid><pubDate>Wed, 06 Nov 2024 06:29:42 +0000</pubDate></item><item><title>场景题-200万白名单用户如何优化</title><link>https://qigaowei.github.io/post/chang-jing-ti--200-wan-bai-ming-dan-yong-hu-ru-he-you-hua.html</link><description>1. 这题的误区可能想到用布隆过滤器，&#13;
 1.1. 但是布隆过滤器只能判断可能存在和一定不存在，比较适合黑名单。</description><guid isPermaLink="true">https://qigaowei.github.io/post/chang-jing-ti--200-wan-bai-ming-dan-yong-hu-ru-he-you-hua.html</guid><pubDate>Wed, 06 Nov 2024 05:56:12 +0000</pubDate></item><item><title>有种业务场景，对用户来说是只读的</title><link>https://qigaowei.github.io/post/you-zhong-ye-wu-chang-jing-%EF%BC%8C-dui-yong-hu-lai-shuo-shi-zhi-du-de.html</link><description>1. 以前公司做的企业工商信息业务&#13;
2. 购买别人T+1的数据，数据解析后，存在es中&#13;
3. 用户只能读，不能有其他操作&#13;
4. 数据量是千万级。</description><guid isPermaLink="true">https://qigaowei.github.io/post/you-zhong-ye-wu-chang-jing-%EF%BC%8C-dui-yong-hu-lai-shuo-shi-zhi-du-de.html</guid><pubDate>Wed, 06 Nov 2024 00:59:14 +0000</pubDate></item><item><title>循环依赖这个问题，也许不存在</title><link>https://qigaowei.github.io/post/xun-huan-yi-lai-zhe-ge-wen-ti-%EF%BC%8C-ye-xu-bu-cun-zai.html</link><description>1. SpringBoot的项目分为三层controller，service，mapper&#13;
2. controller调用service，service不会调用controller&#13;
3. service调用mapper，mapper不会调用service&#13;
4. 如果这样调用，不会出现循环依赖的情况&#13;
5. serviceA调用serviceB，serviceB调用serviceA，可能会出现循环依赖，但这是不合理的，尽量避免&#13;
6. 设计的好，循环依赖这个问题就不存在了&#13;
7. 出现了循环依赖，可以考虑是不是自己设计上的问题。</description><guid isPermaLink="true">https://qigaowei.github.io/post/xun-huan-yi-lai-zhe-ge-wen-ti-%EF%BC%8C-ye-xu-bu-cun-zai.html</guid><pubDate>Tue, 05 Nov 2024 09:52:58 +0000</pubDate></item><item><title>MQ消息积压了，怎么办，一定要处理吗</title><link>https://qigaowei.github.io/post/MQ-xiao-xi-ji-ya-le-%EF%BC%8C-zen-me-ban-%EF%BC%8C-yi-ding-yao-chu-li-ma.html</link><description>- 首先，MQ的作用是削峰，填谷，异步&#13;
- 积压数据是正常操作&#13;
- 如果挤压不是太严重，是可以接受的。</description><guid isPermaLink="true">https://qigaowei.github.io/post/MQ-xiao-xi-ji-ya-le-%EF%BC%8C-zen-me-ban-%EF%BC%8C-yi-ding-yao-chu-li-ma.html</guid><pubDate>Tue, 05 Nov 2024 07:44:29 +0000</pubDate></item><item><title>spring事务，自调用失效，是你想的那样吗</title><link>https://qigaowei.github.io/post/spring-shi-wu-%EF%BC%8C-zi-diao-yong-shi-xiao-%EF%BC%8C-shi-ni-xiang-de-na-yang-ma.html</link><description>1. 不失效&#13;
- @Transactional修饰的方法，调用同一个类的private方法，发生异常，事务会回滚吗&#13;
- @Transactional修饰的方法，本身都是可以正常回滚&#13;
- 调用private方法（没有注解），结果也是可以回滚。</description><guid isPermaLink="true">https://qigaowei.github.io/post/spring-shi-wu-%EF%BC%8C-zi-diao-yong-shi-xiao-%EF%BC%8C-shi-ni-xiang-de-na-yang-ma.html</guid><pubDate>Tue, 05 Nov 2024 01:44:06 +0000</pubDate></item><item><title>使代码更易读技巧</title><link>https://qigaowei.github.io/post/shi-dai-ma-geng-yi-du-ji-qiao.html</link><description>- 代码A&#13;
```java&#13;
orderInfo.setOrderStopDoctor(checkInfo.getApplyDoctor());&#13;
orderInfo.setOrderStopDoctorName(checkInfo.getApplyDoctorName());&#13;
sheet.setEndDoct(orderInfo.getOrderStopDoctor());&#13;
sheet.setEndDoctName(orderInfo.getOrderStopDoctorName());&#13;
```&#13;
- 代码B&#13;
```java&#13;
orderInfo.setOrderStopDoctor(checkInfo.getApplyDoctor());&#13;
orderInfo.setOrderStopDoctorName(checkInfo.getApplyDoctorName());&#13;
sheet.setEndDoct(checkInfo.getApplyDoctor());&#13;
sheet.setEndDoctName(checkInfo.getApplyDoctorName());&#13;
```&#13;
&#13;
- 代码A和代码B，归根到底都是从checkInfo这个对象，获取数据&#13;
- 代码B更易读，更能说明数据从哪来&#13;
- 代码A，可能认为数据从数据库中的orderInfo获取的。</description><guid isPermaLink="true">https://qigaowei.github.io/post/shi-dai-ma-geng-yi-du-ji-qiao.html</guid><pubDate>Mon, 04 Nov 2024 03:54:31 +0000</pubDate></item><item><title>支持2^3这种表达式的解析，可以当计算器使用</title><link>https://qigaowei.github.io/post/zhi-chi-2%5E3-zhe-zhong-biao-da-shi-de-jie-xi-%EF%BC%8C-ke-yi-dang-ji-suan-qi-shi-yong.html</link><description>```xml&#13;
&lt;dependency&gt;&#13;
    &lt;groupId&gt;net.objecthunter&lt;/groupId&gt;&#13;
    &lt;artifactId&gt;exp4j&lt;/artifactId&gt;&#13;
    &lt;version&gt;0.4.8&lt;/version&gt; &lt;!-- 请检查最新版本 --&gt;&#13;
&lt;/dependency&gt;&#13;
```&#13;
&#13;
```java&#13;
import net.objecthunter.exp4j.Expression;&#13;
import net.objecthunter.exp4j.ExpressionBuilder;&#13;
&#13;
public class PowerCalculation {&#13;
    public static void main(String[] args) {&#13;
        String expression = '2^3';&#13;
        &#13;
        Expression e = new ExpressionBuilder(expression)&#13;
                .build();&#13;
        &#13;
        double result = e.evaluate();&#13;
        System.out.println('结果是: ' + result);&#13;
    }&#13;
}&#13;
&#13;
```&#13;
&#13;
&#13;
- 下面这种只支持加减乘除,2^3这种不支持&#13;
&#13;
```java&#13;
import javax.script.ScriptEngine;&#13;
import javax.script.ScriptEngineManager;&#13;
import javax.script.ScriptException;&#13;
// 创建脚本引擎&#13;
 ScriptEngineManager manager = new ScriptEngineManager();&#13;
ScriptEngine engine = manager.getEngineByName('JavaScript');&#13;
&#13;
  // 评估表达式并获取结果&#13;
  Object result = engine.eval(expression);&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/zhi-chi-2%5E3-zhe-zhong-biao-da-shi-de-jie-xi-%EF%BC%8C-ke-yi-dang-ji-suan-qi-shi-yong.html</guid><pubDate>Mon, 28 Oct 2024 07:47:05 +0000</pubDate></item><item><title>mybatis的xml中的大于小于号，＞，＜，转义。</title><link>https://qigaowei.github.io/post/mybatis-de-xml-zhong-de-da-yu-xiao-yu-hao-%EF%BC%8C%EF%BC%9E%EF%BC%8C%EF%BC%9C%EF%BC%8C-zhuan-yi-%E3%80%82.html</link><description>- \&lt;![CDATA[ &gt;= ]]&gt; #{startDate}&#13;
- \&lt;![CDATA[ &lt;= ]]&gt; #{endDate}。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatis-de-xml-zhong-de-da-yu-xiao-yu-hao-%EF%BC%8C%EF%BC%9E%EF%BC%8C%EF%BC%9C%EF%BC%8C-zhuan-yi-%E3%80%82.html</guid><pubDate>Wed, 23 Oct 2024 02:28:40 +0000</pubDate></item><item><title>left join on后面 加条件 与 where后面加条件的区别</title><link>https://qigaowei.github.io/post/left%20join%20on-hou-mian-%20-jia-tiao-jian-%20-yu-%20where-hou-mian-jia-tiao-jian-de-qu-bie.html</link><description>- https://www.cnblogs.com/bluedeblog/p/6654065.html&#13;
- 简单来说，想返回全部数据条件放on里面&#13;
- 过滤数据条件放where里面&#13;
- inner join会全部过滤，不分where和on&#13;
- 使用left join时，忘记写where，直接写and，可能会有问题。</description><guid isPermaLink="true">https://qigaowei.github.io/post/left%20join%20on-hou-mian-%20-jia-tiao-jian-%20-yu-%20where-hou-mian-jia-tiao-jian-de-qu-bie.html</guid><pubDate>Tue, 22 Oct 2024 09:10:48 +0000</pubDate></item><item><title>数据库管理软件，不自动提交事务。。。。</title><link>https://qigaowei.github.io/post/shu-ju-ku-guan-li-ruan-jian-%EF%BC%8C-bu-zi-dong-ti-jiao-shi-wu-%E3%80%82%E3%80%82%E3%80%82%E3%80%82.html</link><description>- 好处是，可以看数据变更的条数。</description><guid isPermaLink="true">https://qigaowei.github.io/post/shu-ju-ku-guan-li-ruan-jian-%EF%BC%8C-bu-zi-dong-ti-jiao-shi-wu-%E3%80%82%E3%80%82%E3%80%82%E3%80%82.html</guid><pubDate>Tue, 22 Oct 2024 02:43:16 +0000</pubDate></item><item><title>使用thymeleaf，get请求只会返回html页面</title><link>https://qigaowei.github.io/post/shi-yong-thymeleaf%EF%BC%8Cget-qing-qiu-zhi-hui-fan-hui-html-ye-mian.html</link><description>```xml&#13;
&lt;dependency&gt;&#13;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
```java&#13;
@GetMapping(value = '/gif')&#13;
    public String mumu2(javax.servlet.http.HttpServletRequest request, Model model) throws Exception{&#13;
        return 'gif';&#13;
    }&#13;
```&#13;
- 前端返回的路径，会是\src\main\resources\templates\gif.html的内容&#13;
- 返回数据，可以全部用post。</description><guid isPermaLink="true">https://qigaowei.github.io/post/shi-yong-thymeleaf%EF%BC%8Cget-qing-qiu-zhi-hui-fan-hui-html-ye-mian.html</guid><pubDate>Mon, 21 Oct 2024 02:56:35 +0000</pubDate></item><item><title>配置打印模板的心得，分页失败的原因分析</title><link>https://qigaowei.github.io/post/pei-zhi-da-yin-mo-ban-de-xin-de-%EF%BC%8C-fen-ye-shi-bai-de-yuan-yin-fen-xi.html</link><description>- 背景，数据结构为数组中含有子数组。</description><guid isPermaLink="true">https://qigaowei.github.io/post/pei-zhi-da-yin-mo-ban-de-xin-de-%EF%BC%8C-fen-ye-shi-bai-de-yuan-yin-fen-xi.html</guid><pubDate>Sat, 12 Oct 2024 03:45:49 +0000</pubDate></item><item><title>前端{{if}}</title><link>https://qigaowei.github.io/post/qian-duan-%7B%7Bif%7D%7D.html</link><description>```js&#13;
 {{if val.orderVoidFlag == '1'}}&#13;
	     &lt;span style='text-decoration: line-through;'&gt;{{val.orderShowName || ''}}&lt;/span&gt;&#13;
	  {{else}}&#13;
	     {{val.orderShowName || ''}}&#13;
	  {{/if}}&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/qian-duan-%7B%7Bif%7D%7D.html</guid><pubDate>Sat, 12 Oct 2024 03:36:50 +0000</pubDate></item><item><title>前端页面中{{}}的判断</title><link>https://qigaowei.github.io/post/qian-duan-ye-mian-zhong-%7B%7B%7D%7D-de-pan-duan.html</link><description>- 年龄：{{patientInfo.patientAge || patientInfo.age}}&#13;
- {{val.startShowDate|| ''}}。</description><guid isPermaLink="true">https://qigaowei.github.io/post/qian-duan-ye-mian-zhong-%7B%7B%7D%7D-de-pan-duan.html</guid><pubDate>Fri, 11 Oct 2024 02:42:28 +0000</pubDate></item><item><title>Arrays.asList无法将set转为list</title><link>https://qigaowei.github.io/post/Arrays.asList-wu-fa-jiang-set-zhuan-wei-list.html</link><description>- java.util.ArrayList#ArrayList(java.util.Collection&lt;? extends E&gt;)&#13;
```java&#13;
Set&lt;Long&gt; ids=new HashSet&lt;&gt;();&#13;
LambdaQueryWrapper&lt;NmTransferAreaUsers&gt; lambdaQueryWrapper&#13;
              = Wrappers.lambdaQuery();&#13;
      lambdaQueryWrapper.in(NmTransferAreaUsers::getNurseId, new ArrayList&lt;&gt;(ids));&#13;
```&#13;
- 下面这种会报错 java.util.Arrays.ArrayList&#13;
```java&#13;
lambdaQueryWrapper.in(NmTransferAreaUsers::getNurseId, Arrays.asList(ids));&#13;
```&#13;
- 报错信息&#13;
```java&#13;
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='ew.paramNameValuePairs.MPGENVAL1', mode=IN, javaType=class java.lang.Object, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: 无效的列类型&#13;
```&#13;
- 这个是个元素为set的list&#13;
![image](https://github.com/user-attachments/assets/019f44a0-7d8e-434d-8134-20b0fff1f9a1)&#13;
- 总结：能用new ArrayList&lt;&gt;就用&#13;
&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Arrays.asList-wu-fa-jiang-set-zhuan-wei-list.html</guid><pubDate>Tue, 24 Sep 2024 08:16:53 +0000</pubDate></item><item><title>NVM快速切换NodeJS版本</title><link>https://qigaowei.github.io/post/NVM-kuai-su-qie-huan-NodeJS-ban-ben.html</link><description>- https://juejin.cn/post/6982863994885242910。</description><guid isPermaLink="true">https://qigaowei.github.io/post/NVM-kuai-su-qie-huan-NodeJS-ban-ben.html</guid><pubDate>Fri, 20 Sep 2024 06:34:25 +0000</pubDate></item><item><title>vue使用map提取数据后，引起的bug</title><link>https://qigaowei.github.io/post/vue-shi-yong-map-ti-qu-shu-ju-hou-%EF%BC%8C-yin-qi-de-bug.html</link><description>```js&#13;
console.log('response.data.members-------1-',response.data.members)&#13;
var temp=response.data.members;&#13;
form.value.members= response.data.members.map(student =&gt; student.internshipStudentsId);&#13;
console.log('response.data.members-------2-',response.data.members)&#13;
form.value.membersName=temp.map(student =&gt; student.internshipStudentsName).join(',')&#13;
```&#13;
- 打印如下&#13;
![image](https://github.com/user-attachments/assets/21009b77-5da2-4b46-a332-d4e784912e04)&#13;
&#13;
- internshipStudentsName消失了&#13;
- 所以用var temp=response.data.members;先保存起来。</description><guid isPermaLink="true">https://qigaowei.github.io/post/vue-shi-yong-map-ti-qu-shu-ju-hou-%EF%BC%8C-yin-qi-de-bug.html</guid><pubDate>Fri, 20 Sep 2024 06:23:54 +0000</pubDate></item><item><title>idea初始化设置，加快运行速度</title><link>https://qigaowei.github.io/post/idea-chu-shi-hua-she-zhi-%EF%BC%8C-jia-kuai-yun-xing-su-du.html</link><description>- 全局自动换行 https://blog.csdn.net/u011675334/article/details/108795519&#13;
- 关闭部分不必要信息提示（比如函数形参提示） https://blog.csdn.net/crossfire_sli/article/details/126997889&#13;
- 设置快捷键 &#13;
- 字体大小，越大越有益于眼睛。</description><guid isPermaLink="true">https://qigaowei.github.io/post/idea-chu-shi-hua-she-zhi-%EF%BC%8C-jia-kuai-yun-xing-su-du.html</guid><pubDate>Sat, 14 Sep 2024 09:32:28 +0000</pubDate></item><item><title>程序员装机必备软件</title><link>https://qigaowei.github.io/post/cheng-xu-yuan-zhuang-ji-bi-bei-ruan-jian.html</link><description>- [idea](https://www.jetbrains.com.cn/idea/download/other.html)&#13;
-  [git](https://git-scm.com/downloads)&#13;
- wps&#13;
- [v2rayn](https://github.com/2dust/v2rayN)&#13;
- 微信&#13;
- 微信输入法（搜狗广告太多）&#13;
- notepad++&#13;
- [mpc播放器，无广告，也不会更新版本了](https://github.com/mpc-hc/mpc-hc/releases/tag/1.7.13)&#13;
- [谷歌浏览器](https://www.google.com/intl/zh-CN/chrome/)&#13;
- [everything](https://www.voidtools.com/)&#13;
- [treesize](https://www.jam-software.com/treesize_free)&#13;
- [7zip](https://7-zip.org/download.html)&#13;
- [dbeaver](https://dbeaver.io/download/) &#13;
- [用这个Navicat Premium Lite，官方推出的免费版  功能少一点,每个公司只能5个用户](https://www.navicat.com/en/products/navicat-premium-lite)&#13;
- [LogViewPro.zip查看大文本必备，可直接下载](https://github.com/user-attachments/files/17613553/LogViewPro.zip)&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cheng-xu-yuan-zhuang-ji-bi-bei-ruan-jian.html</guid><pubDate>Thu, 12 Sep 2024 13:34:45 +0000</pubDate></item><item><title>nodejs镜像地址</title><link>https://qigaowei.github.io/post/nodejs-jing-xiang-di-zhi.html</link><description>1. 先设置镜像地址&#13;
- npm config set registry https://registry.npmmirror.com&#13;
2. 查看镜像地址是否成功&#13;
- npm config get registry &#13;
3. 安装pnpm&#13;
- npm install -g pnpm。</description><guid isPermaLink="true">https://qigaowei.github.io/post/nodejs-jing-xiang-di-zhi.html</guid><pubDate>Thu, 12 Sep 2024 03:02:03 +0000</pubDate></item><item><title>idea插件推荐</title><link>https://qigaowei.github.io/post/idea-cha-jian-tui-jian.html</link><description>1. mybatis跳转到xml的&#13;
- https://plugins.jetbrains.com/plugin/18617-free-mybatis-tool&#13;
2. 一键生成get set，不是实体类的&#13;
- https://plugins.jetbrains.com/plugin/9360-generateallsetter&#13;
3. 免重启，更新代码&#13;
- https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel&#13;
4. 免重启，更新mybatis&#13;
- https://plugins.jetbrains.com/plugin/12682-jrebel-mybatisplus-extension&#13;
5. 查看mybatis的sql&#13;
- https://plugins.jetbrains.com/plugin/17898-mybatis-log-free&#13;
6. 自动切换输入法&#13;
- https://plugins.jetbrains.com/plugin/20575-smart-input。</description><guid isPermaLink="true">https://qigaowei.github.io/post/idea-cha-jian-tui-jian.html</guid><pubDate>Wed, 11 Sep 2024 06:03:23 +0000</pubDate></item><item><title>idea非常卡的原因，通过arthas分析</title><link>https://qigaowei.github.io/post/idea-fei-chang-qia-de-yuan-yin-%EF%BC%8C-tong-guo-arthas-fen-xi.html</link><description>```java&#13;
'FilePageCache housekeeper' Id=103 cpuUsage=7.69% deltaTime=15ms time=990859ms TIMED_WAITING on java.lang.Object@23242b16&#13;
    at java.base@17.0.10/java.lang.Object.wait(Native Method)&#13;
    -  waiting on java.lang.Object@23242b16&#13;
    at com.intellij.util.io.FilePageCacheLockFree.cacheMaintenanceLoop(FilePageCacheLockFree.java:331)&#13;
    at com.intellij.util.io.FilePageCacheLockFree$$Lambda$189/0x000000010030c980.run(Unknown Source)&#13;
    at java.base@17.0.10/java.lang.Thread.run(Thread.java:840)&#13;
```&#13;
- https://youtrack.jetbrains.com/issue/IJPL-2248&#13;
- 241 trully fixed it. Now Remote Development works perfect. Thank you all!&#13;
- 原来是idea的bug，更新下新版本好些。</description><guid isPermaLink="true">https://qigaowei.github.io/post/idea-fei-chang-qia-de-yuan-yin-%EF%BC%8C-tong-guo-arthas-fen-xi.html</guid><pubDate>Mon, 09 Sep 2024 08:05:32 +0000</pubDate></item><item><title>Could not connect to SMTP host: smtp.163.com, port: 465；</title><link>https://qigaowei.github.io/post/Could%20not%20connect%20to%20SMTP%20host-%20smtp.163.com%2C%20port-%20465%EF%BC%9B.html</link><description>1. 方法，不推荐&#13;
    - 打开 C:\Program Files\Java\jre-1.8\lib\security\java.security&#13;
    - 搜索jdk.tls.disabledAlgorithms&#13;
    - 删除 SSLv3, TLSv1, TLSv1.1, &#13;
    - 结果如下&#13;
    ```&#13;
    jdk.tls.disabledAlgorithms=RC4, DES, MD5withRSA, \&#13;
        DH keySize &lt; 1024, EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL, \&#13;
        include jdk.disabled.namedCurves&#13;
    ```&#13;
    - 最后，别忘了重启SpringBoot&#13;
  2. 把javax.mail的包换成com.sun.mail&#13;
  ```xml&#13;
        &lt;dependency&gt;&#13;
            &lt;groupId&gt;com.sun.mail&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;javax.mail&lt;/artifactId&gt;&#13;
            &lt;version&gt;1.6.2&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Could%20not%20connect%20to%20SMTP%20host-%20smtp.163.com%2C%20port-%20465%EF%BC%9B.html</guid><pubDate>Sat, 07 Sep 2024 03:39:34 +0000</pubDate></item><item><title>mybatis动态传入order by(排序字段) 和 sort(排序方式) 防止注入</title><link>https://qigaowei.github.io/post/mybatis-dong-tai-chuan-ru-order%20by%28-pai-xu-zi-duan-%29%20-he-%20sort%28-pai-xu-fang-shi-%29%20-fang-zhi-zhu-ru.html</link><description>- $ 方式会传入一个不改变的字符串，不能够防止注入&#13;
如：order by #{orderBy}，如果传入的是 update_time，则会被解析为 order by update_time&#13;
- 下面这种可以防止注入&#13;
```xml&#13;
SELECT &lt;include refid='Base_Column_List'/&gt; &#13;
FROM alarm_list_info_view as m&#13;
&lt;where&gt;&#13;
     &lt;if test='param.orderBy== 'begin_time''&gt;&#13;
    	order by begin_time&#13;
     &lt;/if&gt;&#13;
     &lt;if test='param.orderBy== 'update_time''&gt;&#13;
        order by update_time&#13;
     &lt;/if&gt;&#13;
&lt;/where&gt;&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatis-dong-tai-chuan-ru-order%20by%28-pai-xu-zi-duan-%29%20-he-%20sort%28-pai-xu-fang-shi-%29%20-fang-zhi-zhu-ru.html</guid><pubDate>Fri, 06 Sep 2024 01:41:40 +0000</pubDate></item><item><title>Windows系统后台运行java程序（关闭命令行窗口执行）</title><link>https://qigaowei.github.io/post/Windows-xi-tong-hou-tai-yun-xing-java-cheng-xu-%EF%BC%88-guan-bi-ming-ling-xing-chuang-kou-zhi-xing-%EF%BC%89.html</link><description>```cmd&#13;
@echo off&#13;
start javaw -jar urp.jar&#13;
exit&#13;
```&#13;
&#13;
- 一定是javaw。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Windows-xi-tong-hou-tai-yun-xing-java-cheng-xu-%EF%BC%88-guan-bi-ming-ling-xing-chuang-kou-zhi-xing-%EF%BC%89.html</guid><pubDate>Fri, 06 Sep 2024 01:31:43 +0000</pubDate></item><item><title>maven在pom里面添加仓库地址</title><link>https://qigaowei.github.io/post/maven-zai-pom-li-mian-tian-jia-cang-ku-di-zhi.html</link><description>```xml&#13;
 &lt;repositories&gt;&#13;
        &lt;repository&gt;&#13;
            &lt;id&gt;public&lt;/id&gt;&#13;
            &lt;name&gt;aliyun nexus&lt;/name&gt;&#13;
            &lt;url&gt;https://maven.aliyun.com/repository/central/&lt;/url&gt;&#13;
            &lt;releases&gt;&#13;
                &lt;enabled&gt;true&lt;/enabled&gt;&#13;
            &lt;/releases&gt;&#13;
        &lt;/repository&gt;&#13;
    &lt;/repositories&gt;&#13;
    &lt;pluginRepositories&gt;&#13;
        &lt;pluginRepository&gt;&#13;
            &lt;id&gt;public&lt;/id&gt;&#13;
            &lt;name&gt;aliyun nexus&lt;/name&gt;&#13;
            &lt;url&gt;https://maven.aliyun.com/repository/central/&lt;/url&gt;&#13;
            &lt;releases&gt;&#13;
                &lt;enabled&gt;true&lt;/enabled&gt;&#13;
            &lt;/releases&gt;&#13;
            &lt;snapshots&gt;&#13;
                &lt;enabled&gt;false&lt;/enabled&gt;&#13;
            &lt;/snapshots&gt;&#13;
        &lt;/pluginRepository&gt;&#13;
    &lt;/pluginRepositories&gt;&#13;
```&#13;
&#13;
- 在project这一层级的下级。</description><guid isPermaLink="true">https://qigaowei.github.io/post/maven-zai-pom-li-mian-tian-jia-cang-ku-di-zhi.html</guid><pubDate>Wed, 04 Sep 2024 02:53:09 +0000</pubDate></item><item><title>vue中的循环</title><link>https://qigaowei.github.io/post/vue-zhong-de-xun-huan.html</link><description>```html&#13;
&lt;his-input v-model='item.targetName' :disabled='true' v-for='item,index in form.details' :key='index'/&gt;&#13;
```&#13;
&#13;
- (v-for='item,index in form.details' :key='index')加在哪里，哪里就循环显示。</description><guid isPermaLink="true">https://qigaowei.github.io/post/vue-zhong-de-xun-huan.html</guid><pubDate>Tue, 03 Sep 2024 09:03:42 +0000</pubDate></item><item><title>使用arthas，得出jrebel占用cpu特别严重</title><link>https://qigaowei.github.io/post/shi-yong-arthas%EF%BC%8C-de-chu-jrebel-zhan-yong-cpu-te-bie-yan-zhong.html</link><description>- 1CMD输入命令&#13;
```shell&#13;
 'C:\Program Files\Java\jdk-1.8\bin\java.exe' -jar arthas-boot.jar 25760&#13;
 thread -n 8&#13;
```&#13;
- 2发现占用cpu最高的是如下线程&#13;
```java&#13;
'rebel-fsnotify-OutputReader' Id=31 cpuUsage=6.2% deltaTime=15ms time=6718ms RUNNABLE&#13;
    at java.io.FileInputStream.readBytes(FileInputStream.java)&#13;
    at java.io.FileInputStream.read(FileInputStream.java:255)&#13;
    at java.io.BufferedInputStream.read1(BufferedInputStream.java:284)&#13;
    at java.io.BufferedInputStream.read(BufferedInputStream.java:345)&#13;
    at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)&#13;
    at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)&#13;
    at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)&#13;
    at java.io.InputStreamReader.read(InputStreamReader.java:184)&#13;
    at java.io.BufferedReader.fill(BufferedReader.java:161)&#13;
    at java.io.BufferedReader.readLine(BufferedReader.java:324)&#13;
    at java.io.BufferedReader.readLine(BufferedReader.java:389)&#13;
    at org.zeroturnaround.jrebel.intellij.OutputReader.run(OutputReader.java:55)&#13;
    at java.lang.Thread.run(Thread.java:750)&#13;
&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/shi-yong-arthas%EF%BC%8C-de-chu-jrebel-zhan-yong-cpu-te-bie-yan-zhong.html</guid><pubDate>Mon, 26 Aug 2024 07:52:44 +0000</pubDate></item><item><title>不换行样式</title><link>https://qigaowei.github.io/post/bu-huan-xing-yang-shi.html</link><description>```html   &#13;
&lt;div class='flex'&gt; &lt;/div&gt;&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/bu-huan-xing-yang-shi.html</guid><pubDate>Mon, 26 Aug 2024 06:59:10 +0000</pubDate></item><item><title>三种宽度样式</title><link>https://qigaowei.github.io/post/san-zhong-kuan-du-yang-shi.html</link><description>- style='width: 60px'&#13;
- width='60'&#13;
- :style='{ width: '10%' }'。</description><guid isPermaLink="true">https://qigaowei.github.io/post/san-zhong-kuan-du-yang-shi.html</guid><pubDate>Mon, 26 Aug 2024 06:57:29 +0000</pubDate></item><item><title>PC端打开多个微信</title><link>https://qigaowei.github.io/post/PC-duan-da-kai-duo-ge-wei-xin.html</link><description>```shell&#13;
@echo off&#13;
start '' 'D:\Program Files\Tencent\WeChat\WeChat.exe' &#13;
start '' 'D:\Program Files\Tencent\WeChat\WeChat.exe'&#13;
exit&#13;
```&#13;
- 把上述保存到bat格式文件里面&#13;
- 把地址换成自己的程序路径。</description><guid isPermaLink="true">https://qigaowei.github.io/post/PC-duan-da-kai-duo-ge-wei-xin.html</guid><pubDate>Sun, 25 Aug 2024 11:53:07 +0000</pubDate></item><item><title>vue的change事件传值</title><link>https://qigaowei.github.io/post/vue-de-change-shi-jian-chuan-zhi.html</link><description>```JavaScript&#13;
@change='changeS'&#13;
&#13;
function changeS(e){&#13;
  listGroup({checkType:e}).then((response) =&gt; {&#13;
    specialSelectedList.value = response.data;&#13;
  });&#13;
```&#13;
&#13;
-  要用e获取值，而不是checkType:checkType.value，&#13;
 ```JavaScript&#13;
@change='changeS'&#13;
&#13;
function changeS(){&#13;
  listGroup({checkType:checkType.value}).then((response) =&gt; {&#13;
    specialSelectedList.value = response.data;&#13;
  });&#13;
```&#13;
- 原来的定义为let checkType= ref('');。</description><guid isPermaLink="true">https://qigaowei.github.io/post/vue-de-change-shi-jian-chuan-zhi.html</guid><pubDate>Wed, 21 Aug 2024 09:39:13 +0000</pubDate></item><item><title>oracle只比较日期，不比较时分秒</title><link>https://qigaowei.github.io/post/oracle-zhi-bi-jiao-ri-qi-%EF%BC%8C-bu-bi-jiao-shi-fen-miao.html</link><description>```sql&#13;
SELECT &#13;
	op.OPERATION_TIME&#13;
FROM&#13;
	his_nurse.NS_OPERATION_RECORD op&#13;
WHERE&#13;
	TO_CHAR(op.OPERATION_DATE, 'YYYY-MM-DD') = '2024-08-21'&#13;
```&#13;
- 上面正确，下面不正确&#13;
```sql&#13;
SELECT &#13;
	op.OPERATION_TIME&#13;
FROM&#13;
	his_nurse.NS_OPERATION_RECORD op&#13;
WHERE&#13;
	TO_DATE(op.OPERATION_DATE, 'YYYY-MM-DD') = '2024-08-21'&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/oracle-zhi-bi-jiao-ri-qi-%EF%BC%8C-bu-bi-jiao-shi-fen-miao.html</guid><pubDate>Wed, 21 Aug 2024 03:51:43 +0000</pubDate></item><item><title>一个小bug,填充一个size为30的list</title><link>https://qigaowei.github.io/post/yi-ge-xiao-bug%2C-tian-chong-yi-ge-size-wei-30-de-list.html</link><description>- 目的是如果handoverRecordDetailsVo的大小小于30，就给他填充到30，实际不是这样的效果&#13;
```java&#13;
List handoverRecordDetailsVo = new ArrayList();&#13;
if(handoverRecordDetailsVo.size()&lt;30){&#13;
	for (int i = 0; i &lt; (30-handoverRecordDetailsVo.size()); i++) {&#13;
		Map detail = new HashMap();&#13;
		handoverRecordDetailsVo.add(detail);&#13;
	}&#13;
}&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/yi-ge-xiao-bug%2C-tian-chong-yi-ge-size-wei-30-de-list.html</guid><pubDate>Thu, 15 Aug 2024 07:30:25 +0000</pubDate></item><item><title>前端-idea启动vue，cpu占用太高</title><link>https://qigaowei.github.io/post/qian-duan--idea-qi-dong-vue%EF%BC%8Ccpu-zhan-yong-tai-gao.html</link><description>- idea启动vue，cpu占用太高&#13;
- vscode也会占用cpu，内存&#13;
- 我直接使用git bash，npm run dev启动&#13;
- 修改前端代码后，也不用重启&#13;
- 电脑性能不行的悲哀&#13;
- 新建一个内容为npm run dev的bat文件放到前端代码目录下，将快捷方式放到桌面上，更省时间。</description><guid isPermaLink="true">https://qigaowei.github.io/post/qian-duan--idea-qi-dong-vue%EF%BC%8Ccpu-zhan-yong-tai-gao.html</guid><pubDate>Wed, 14 Aug 2024 04:00:33 +0000</pubDate></item><item><title>Idea使用 Undo Commit，Revert Commit，Drop Commit区别</title><link>https://qigaowei.github.io/post/Idea-shi-yong-%20Undo%20Commit%EF%BC%8CRevert%20Commit%EF%BC%8CDrop%20Commit-qu-bie.html</link><description>&#13;
-|是否删除对代码的修改 | 是否删除Commit记录 | 是否会新增Commit记录&#13;
-|-- | -- | --&#13;
Undo Commit | 不会 | 未Push会，已Push不会 | 不会&#13;
Revert Commit | 会 | 不会 | 会&#13;
Drop Commit | 会 | 未Push会，已Push不会 | 不会&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Idea-shi-yong-%20Undo%20Commit%EF%BC%8CRevert%20Commit%EF%BC%8CDrop%20Commit-qu-bie.html</guid><pubDate>Wed, 07 Aug 2024 08:57:44 +0000</pubDate></item><item><title>取消 Windows Server 2019 默认 IE 浏览器所谓的安全增强配置</title><link>https://qigaowei.github.io/post/qu-xiao-%20Windows%20Server%202019%20-mo-ren-%20IE%20-liu-lan-qi-suo-wei-de-an-quan-zeng-qiang-pei-zhi.html</link><description>1.  开始菜单找到，服务器管理器&#13;
2.  点击左侧菜单的本地服务器，右侧  属性  找到IE 增强的安全配置，点击右侧启动按钮，进入配置界面。</description><guid isPermaLink="true">https://qigaowei.github.io/post/qu-xiao-%20Windows%20Server%202019%20-mo-ren-%20IE%20-liu-lan-qi-suo-wei-de-an-quan-zeng-qiang-pei-zhi.html</guid><pubDate>Mon, 05 Aug 2024 03:59:27 +0000</pubDate></item><item><title>天气爬虫，有变动发送邮件通知</title><link>https://qigaowei.github.io/post/tian-qi-pa-chong-%EF%BC%8C-you-bian-dong-fa-song-you-jian-tong-zhi.html</link><description>```java&#13;
public void china(String city,String code,String time){&#13;
        StringBuffer sb=new StringBuffer();&#13;
        String html=HttpUtil.&#13;
                get('https://weather.cma.cn/web/weather/53679.html');&#13;
        Document doc=Jsoup.parse(html);&#13;
        Elements timeE=doc.select('#hourTable_0 &gt; tbody &gt; tr:nth-child(1) &gt; td');&#13;
        Elements timeTemp=doc.select('#hourTable_0 &gt; tbody &gt; tr:nth-child(3) &gt; td');&#13;
        Elements timeRain=doc.select('#hourTable_0 &gt; tbody &gt; tr:nth-child(4) &gt;td');&#13;
        int j=0;&#13;
        if(CollUtil.isNotEmpty(timeE)){&#13;
            int i=0;&#13;
            for(Element e:timeE){&#13;
                String tempStr=timeTemp.get(i).select('td').text();&#13;
                String timeStr=e.select('td').text();&#13;
                String rainStr=timeRain.get(i).select('td').text();&#13;
                i++;&#13;
                if(!rainStr.contains('无降水')){&#13;
                    if(i!=1){&#13;
                        j++;&#13;
                    }&#13;
                    sb.append(timeStr+'-'+tempStr+'-'+('&lt;strong style=\'color:red;\'&gt;'+rainStr+'&lt;/strong&gt;')+'&lt;br&gt;');&#13;
                }else {&#13;
                    sb.append(timeStr+'-'+tempStr+'-'+rainStr+'&lt;br&gt;');&#13;
                }&#13;
            }&#13;
        }else{&#13;
            doc.append('&lt;font size=\'3\' color=\'red\'&gt;无资源&lt;/font&gt;&lt;br&gt;\n');&#13;
        }&#13;
        if(StrUtil.isNotBlank(sb)){&#13;
            sb=new StringBuffer(('&lt;strong style=\'color:red;\'&gt;'+city+'&lt;/strong&gt;&lt;br&gt;')+sb.toString());&#13;
            File tianqi=new File('/root/'+code+'.txt');&#13;
            if(!tianqi.exists()){&#13;
                FileUtil.touch(tianqi);&#13;
            }&#13;
            String str=FileUtil.readString(tianqi,Charset.forName('UTF-8'));&#13;
            if(j&gt;0&amp;&amp;!(StrUtil.isNotBlank(str)&amp;&amp;str.equals(sb.toString()))){&#13;
               //发送邮件，自己编写&#13;
                FileUtil.writeBytes(new byte[0], tianqi);&#13;
                FileUtil.appendString(sb.toString(),tianqi, Charset.forName('UTF-8'));&#13;
            }&#13;
        }&#13;
    }&#13;
```&#13;
&#13;
-  code为城市代码，我只是写死了&#13;
&#13;
邮件效果&#13;
![image](https://github.com/user-attachments/assets/e2ca7575-6b8d-4cd8-8e9e-30e1925e9c6b)&#13;
&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/tian-qi-pa-chong-%EF%BC%8C-you-bian-dong-fa-song-you-jian-tong-zhi.html</guid><pubDate>Sat, 03 Aug 2024 13:57:01 +0000</pubDate></item><item><title>mybatisplus枚举</title><link>https://qigaowei.github.io/post/mybatisplus-mei-ju.html</link><description>```java&#13;
public enum SqlKeyword implements ISqlSegment {&#13;
    AND('AND'),&#13;
    OR('OR'),&#13;
    NOT('NOT'),&#13;
    IN('IN'),&#13;
    NOT_IN('NOT IN'),&#13;
    LIKE('LIKE'),&#13;
    NOT_LIKE('NOT LIKE'),&#13;
    EQ('='),&#13;
    NE('&lt;&gt;'),&#13;
    GT('&gt;'),&#13;
    GE('&gt;='),&#13;
    LT('&lt;'),&#13;
    LE('&lt;='),&#13;
    IS_NULL('IS NULL'),&#13;
    IS_NOT_NULL('IS NOT NULL'),&#13;
    GROUP_BY('GROUP BY'),&#13;
    HAVING('HAVING'),&#13;
    ORDER_BY('ORDER BY'),&#13;
    EXISTS('EXISTS'),&#13;
    NOT_EXISTS('NOT EXISTS'),&#13;
    BETWEEN('BETWEEN'),&#13;
    NOT_BETWEEN('NOT BETWEEN'),&#13;
    ASC('ASC'),&#13;
    DESC('DESC');&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatisplus-mei-ju.html</guid><pubDate>Thu, 01 Aug 2024 08:59:46 +0000</pubDate></item><item><title>指定jdk17启动springboot项目</title><link>https://qigaowei.github.io/post/zhi-ding-jdk17-qi-dong-springboot-xiang-mu.html</link><description>创建一个如下的shell脚本&#13;
``` shell&#13;
#!/bin/bash&#13;
&#13;
export JAVA_HOME=/usr/local/jdk-17.0.8/&#13;
export JRE_HOME=${JAVA_HOME}/jre&#13;
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib&#13;
export PATH=.:${JAVA_HOME}/bin:$PATH&#13;
&#13;
nohup java -jar chatgpt-0.0.1-SNAPSHOT.jar &gt; /dev/null 2&gt;&amp;1 &amp;&#13;
```&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/zhi-ding-jdk17-qi-dong-springboot-xiang-mu.html</guid><pubDate>Sun, 28 Jul 2024 04:55:58 +0000</pubDate></item><item><title>hutool的jsonpath的使用</title><link>https://qigaowei.github.io/post/hutool-de-jsonpath-de-shi-yong.html</link><description>```java&#13;
JSON res = JSONUtil.parse(str);&#13;
String imageUrl = JSONUtil.getByPath(res, 'data.video.cover').toString();&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/hutool-de-jsonpath-de-shi-yong.html</guid><pubDate>Sat, 27 Jul 2024 05:32:24 +0000</pubDate></item><item><title>docker启动自己的java项目</title><link>https://qigaowei.github.io/post/docker-qi-dong-zi-ji-de-java-xiang-mu.html</link><description>1. 创建镜像，注意最后的标点符号，跟jar包和Dockerfile一个目录&#13;
  - docker build -t demo-8-app .    &#13;
2. 启动容器,定时任务需要指定时区，端口44444为宿主机端口，33333为容器内的端口，路径类推&#13;
- docker run -e TZ=Asia/Shanghai --restart=always -v /root/demo8:/root -d -p 44444:33333 demo-8-app  &#13;
3. 通过上个命令返回的id，查看镜像&#13;
- docker logs  &#13;
4.  停止容器&#13;
- docker ps -a | grep demo-8-app | awk '{print $1}'| xargs docker stop&#13;
5. 删除容器&#13;
- docker ps -a | grep demo-8-app | awk '{print $1}'| xargs docker rm&#13;
7. 删除镜像&#13;
- docker images -a | grep demo-8-app | awk '{print $1}'| xargs docker rmi&#13;
8. Dockerfile内容，创建一个名字为Dockerfile，无扩展名的文件&#13;
```&#13;
# 使用官方的Java基础镜像&#13;
FROM openjdk:8-jre-alpine&#13;
&#13;
# 复制应用程序JAR文件到容器中&#13;
COPY demo-0.0.1-SNAPSHOT.jar /demo-0.0.1-SNAPSHOT.jar&#13;
&#13;
# 指定容器启动命令&#13;
CMD ['java', '-jar', '/demo-0.0.1-SNAPSHOT.jar']&#13;
```&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/docker-qi-dong-zi-ji-de-java-xiang-mu.html</guid><pubDate>Fri, 26 Jul 2024 09:35:33 +0000</pubDate></item><item><title>markdown转html，示例和优化</title><link>https://qigaowei.github.io/post/markdown-zhuan-html%EF%BC%8C-shi-li-he-you-hua.html</link><description>```java&#13;
import com.vladsch.flexmark.util.ast.Node;&#13;
import com.vladsch.flexmark.html.HtmlRenderer;&#13;
import com.vladsch.flexmark.parser.Parser;&#13;
import com.vladsch.flexmark.util.data.MutableDataSet;&#13;
&#13;
 // 配置选项&#13;
        MutableDataSet options = new MutableDataSet();&#13;
&#13;
        // 创建解析器和渲染器&#13;
        Parser parser = Parser.builder(options).build();&#13;
        HtmlRenderer renderer = HtmlRenderer.builder(options).build();&#13;
&#13;
        // 解析并渲染Markdown&#13;
        Node document = parser.parse(content);&#13;
        String html = renderer.render(document);&#13;
```&#13;
```xml&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;com.vladsch.flexmark&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;flexmark&lt;/artifactId&gt;&#13;
            &lt;version&gt;0.62.2&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
下面这种jar包体积会很大，建议上面这种&#13;
```xml&#13;
&lt;dependency&gt;&#13;
            &lt;groupId&gt;com.vladsch.flexmark&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;flexmark-all&lt;/artifactId&gt;&#13;
            &lt;version&gt;0.62.2&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/markdown-zhuan-html%EF%BC%8C-shi-li-he-you-hua.html</guid><pubDate>Fri, 26 Jul 2024 07:26:27 +0000</pubDate></item><item><title>爬虫时，特殊符号的处理，比如url中+号</title><link>https://qigaowei.github.io/post/pa-chong-shi-%EF%BC%8C-te-shu-fu-hao-de-chu-li-%EF%BC%8C-bi-ru-url-zhong-%2B-hao.html</link><description>- URLEncoder.encode(url)&#13;
- 若含有+号&#13;
- 必须转义才能正确访问&#13;
- HttpRequest.get(url)。</description><guid isPermaLink="true">https://qigaowei.github.io/post/pa-chong-shi-%EF%BC%8C-te-shu-fu-hao-de-chu-li-%EF%BC%8C-bi-ru-url-zhong-%2B-hao.html</guid><pubDate>Fri, 26 Jul 2024 02:53:16 +0000</pubDate></item><item><title>springboot多数据源</title><link>https://qigaowei.github.io/post/springboot-duo-shu-ju-yuan.html</link><description>```xml   &#13;
      &lt;dependency&gt;&#13;
            &lt;groupId&gt;com.baomidou&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;dynamic-datasource-spring-boot-starter&lt;/artifactId&gt;&#13;
            &lt;version&gt;3.4.1&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
&#13;
```&#13;
spring.datasource.dynamic.primary=master &#13;
spring.datasource.dynamic.strict=true&#13;
spring.datasource.dynamic.datasource.master.url=jdbc:mysql://10.1.1.160:3306/account_gateway?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=GMT%2B8&#13;
spring.datasource.dynamic.datasource.master.username=root&#13;
spring.datasource.dynamic.datasource.master.password=A123456&#13;
spring.datasource.dynamic.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver&#13;
spring.datasource.dynamic.datasource.second.url=jdbc:mysql://10.8.1.8:3306/db_search?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;serverTimezone=GMT%2B8&#13;
spring.datasource.dynamic.datasource.second.username=root&#13;
spring.datasource.dynamic.datasource.second.password=A123456&#13;
spring.datasource.dynamic.datasource.second.driver-class-name=com.mysql.cj.jdbc.Driver&#13;
```&#13;
&#13;
```java&#13;
@Service&#13;
@DS('master')&#13;
public class EnterpriseBasicInfoServiceImpl extends ServiceImpl&lt;EnterpriseBasicInfoMapper, EnterpriseBasicInfo&gt;{&#13;
```&#13;
 -    DS('master')这个注解的意思就是指定数据库连接为master的数据连接。</description><guid isPermaLink="true">https://qigaowei.github.io/post/springboot-duo-shu-ju-yuan.html</guid><pubDate>Fri, 26 Jul 2024 01:04:58 +0000</pubDate></item><item><title>面试题：Skywalking怎么在线程池中传递值，比如traceid</title><link>https://qigaowei.github.io/post/mian-shi-ti-%EF%BC%9ASkywalking-zen-me-zai-xian-cheng-chi-zhong-chuan-di-zhi-%EF%BC%8C-bi-ru-traceid.html</link><description>1. 自己的项目中，怎么传递&#13;
- 开源项目推荐https://github.com/alibaba/transmittable-thread-local&#13;
&#13;
2. Skywalking通过Agent实现&#13;
- Skywalking这样的Agent的入口逻辑（premain）包含了线程池的启动。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mian-shi-ti-%EF%BC%9ASkywalking-zen-me-zai-xian-cheng-chi-zhong-chuan-di-zhi-%EF%BC%8C-bi-ru-traceid.html</guid><pubDate>Fri, 26 Jul 2024 01:04:05 +0000</pubDate></item><item><title>linux命令获取内网ip</title><link>https://qigaowei.github.io/post/linux-ming-ling-huo-qu-nei-wang-ip.html</link><description>```shell&#13;
CURRENT_IP=$(ip addr | grep inet |grep -v '127.0.0.1' |grep -v inet6|awk '{print $2}'|awk -F '/' '{print $1}'| head -1)&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/linux-ming-ling-huo-qu-nei-wang-ip.html</guid><pubDate>Fri, 26 Jul 2024 01:00:02 +0000</pubDate></item><item><title>获取当天指定时分秒的简单方法</title><link>https://qigaowei.github.io/post/huo-qu-dang-tian-zhi-ding-shi-fen-miao-de-jian-dan-fang-fa.html</link><description>```java&#13;
DateUtil.parse(DateUtil.format(new Date(),'yyyyMMdd235959'))&#13;
```&#13;
```xml&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;cn.hutool&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;&#13;
            &lt;version&gt;5.7.14&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/huo-qu-dang-tian-zhi-ding-shi-fen-miao-de-jian-dan-fang-fa.html</guid><pubDate>Fri, 26 Jul 2024 00:56:33 +0000</pubDate></item><item><title>mysql返回随机数据</title><link>https://qigaowei.github.io/post/mysql-fan-hui-sui-ji-shu-ju.html</link><description>``` sql&#13;
ORDER BY RAND()&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mysql-fan-hui-sui-ji-shu-ju.html</guid><pubDate>Fri, 26 Jul 2024 00:43:41 +0000</pubDate></item><item><title>磁力一键复制源码</title><link>https://qigaowei.github.io/post/ci-li-yi-jian-fu-zhi-yuan-ma.html</link><description>```java&#13;
 @PostMapping('/magnet')&#13;
    @ResponseBody&#13;
    public String magnet(@RequestBody QueryVo vo) throws Exception{&#13;
        StringBuffer magnets=new StringBuffer('');&#13;
        if(vo.getPage()==null){&#13;
            vo.setPage(0);&#13;
        }&#13;
        String html=HttpRequest.get('https://doc2.htmcdn.com:39988/search?word='+vo.getKey()+'&amp;sort=&amp;page='+vo.getPage()+'')&#13;
                .header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7')&#13;
                .header('Accept-Encoding', 'gzip, deflate, br, zstd')&#13;
                .header('Accept-Language', 'zh')&#13;
                .header('Cache-Control', 'no-cache')&#13;
                .header('Pragma', 'no-cache')&#13;
                .header('Priority', 'u=0, i')&#13;
                .header('Referer', 'https://doc.htmcdn.com:39988/search?')&#13;
                .header('Sec-Ch-Ua', '\'Not/A)Brand\';v=\'8\', \'Chromium\';v=\'126\', \'Google Chrome\';v=\'126\'')&#13;
                .header('Sec-Ch-Ua-Mobile', '?0')&#13;
                .header('Sec-Ch-Ua-Platform', '\'Windows\'')&#13;
                .header('Sec-Fetch-Dest', 'iframe')&#13;
                .header('Sec-Fetch-Mode', 'navigate')&#13;
                .header('Sec-Fetch-Site', 'same-origin')&#13;
                .header('Sec-Fetch-User', '?1')&#13;
                .header('Upgrade-Insecure-Requests', '1')&#13;
                .header('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36')&#13;
                .execute().body();&#13;
        Document doc=Jsoup.parse(html);&#13;
        Elements elements=doc.select('body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div');&#13;
        if(CollUtil.isNotEmpty(elements)){&#13;
            int i=0;&#13;
            for(Element e:elements){&#13;
                i++;&#13;
                String magnet=doc.select(&#13;
                        'body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div:nth-child('+i+') &gt; div.sbar &gt; span:nth-child(1) &gt; a').get(0).attr('href');&#13;
                magnets.append(magnet+'\n');&#13;
                doc.select(&#13;
                        'body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div:nth-child('+i+')').append('&lt;button class=\'btn\' data-clipboard-demo=\'\' ' +&#13;
                        'data-clipboard-action=\'copy\' data-clipboard-text=\''&#13;
                        +magnet+'\'&gt;点击复制磁力链接&lt;/button&gt;&lt;br&gt;\n');&#13;
            }&#13;
            doc.select(&#13;
                    'body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6) &gt; div:nth-child('+i+')').append('&lt;button class=\'btn\' data-clipboard-demo=\'\' ' +&#13;
                    'data-clipboard-action=\'copy\' data-clipboard-text=\''&#13;
                    +magnets.toString()+'\'&gt;点击复制本页所有磁力链接&lt;/button&gt;&lt;br&gt;\n');&#13;
        }else{&#13;
            doc.append('&lt;font size=\'3\' color=\'red\'&gt;无资源&lt;/font&gt;&lt;br&gt;\n');&#13;
        }&#13;
        return doc.select('body &gt; div.wrapper &gt; div.p-wrapper &gt; div:nth-child(6)').html();&#13;
    }&#13;
  @Data&#13;
    public static class QueryVo {&#13;
        private String key;&#13;
        private String url;&#13;
        private Integer page;&#13;
    }&#13;
```&#13;
```xml&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;cn.hutool&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;&#13;
            &lt;version&gt;5.7.14&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
 &lt;dependency&gt;&#13;
            &lt;groupId&gt;org.jsoup&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;jsoup&lt;/artifactId&gt;&#13;
            &lt;version&gt;1.16.1&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
- html引用clipboard.min.js就可以实现一键复制&#13;
&#13;
效果如下&#13;
&#13;
![image](https://github.com/user-attachments/assets/704e25f6-ff7a-4298-8b72-ddb038f75fc9)&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/ci-li-yi-jian-fu-zhi-yuan-ma.html</guid><pubDate>Fri, 26 Jul 2024 00:28:28 +0000</pubDate></item><item><title>各种在线视频下载-简单免费</title><link>https://qigaowei.github.io/post/ge-zhong-zai-xian-shi-pin-xia-zai---jian-dan-mian-fei.html</link><description>1. 获取m3u8地址&#13;
- 谷歌浏览器搜插件Video DownloadHelper&#13;
- https://www.downloadhelper.net/&#13;
2. 下载工具&#13;
- 获取m3u8地址后通过以下工具下载&#13;
- https://github.com/nilaoda/N_m3u8DL-CLI&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/ge-zhong-zai-xian-shi-pin-xia-zai---jian-dan-mian-fei.html</guid><pubDate>Thu, 25 Jul 2024 09:12:54 +0000</pubDate></item><item><title>docker镜像国内可用地址</title><link>https://qigaowei.github.io/post/docker-jing-xiang-guo-nei-ke-yong-di-zhi.html</link><description>- https://github.com/docker-practice/docker-registry-cn-mirror-test&#13;
- 测试结果请到 Actions 标签详情页查看。</description><guid isPermaLink="true">https://qigaowei.github.io/post/docker-jing-xiang-guo-nei-ke-yong-di-zhi.html</guid><pubDate>Thu, 25 Jul 2024 09:09:39 +0000</pubDate></item><item><title>idea提升运行速度-效果非常明显</title><link>https://qigaowei.github.io/post/idea-ti-sheng-yun-xing-su-du---xiao-guo-fei-chang-ming-xian.html</link><description>- File----&gt;Setting----&gt;Editor----&gt;Inlay Hints----&gt;Code vision----&gt;取消勾选所有（可逆）&#13;
- 关闭以上设置，可以减少内存占用，提升运行速度，适合低配置电脑&#13;
- 这些设置是查看方法的创建人，方法有没有被引用之类的。</description><guid isPermaLink="true">https://qigaowei.github.io/post/idea-ti-sheng-yun-xing-su-du---xiao-guo-fei-chang-ming-xian.html</guid><pubDate>Thu, 25 Jul 2024 09:06:44 +0000</pubDate></item><item><title>@Transactional的使用</title><link>https://qigaowei.github.io/post/%40Transactional-de-shi-yong.html</link><description>```java&#13;
import org.springframework.transaction.annotation.Transactional;&#13;
@Transactional(rollbackFor = Exception.class)&#13;
```&#13;
- 必须指定Exception.class，要不会回滚失败&#13;
- 别跟javax.transaction.Transactional搞混了&#13;
&#13;
- If your application is SPRING web application and you are using Spring's transaction handling mechanism that is @org.springframework.transaction.annotation.Transactional, then don't mix it with javax.transaction.Transactional.&#13;
&#13;
- That is Always use, @org.springframework.transaction.annotation.Transactional in a spring application consistently.。</description><guid isPermaLink="true">https://qigaowei.github.io/post/%40Transactional-de-shi-yong.html</guid><pubDate>Thu, 25 Jul 2024 06:46:37 +0000</pubDate></item><item><title>feign接口配置指定ip</title><link>https://qigaowei.github.io/post/feign-jie-kou-pei-zhi-zhi-ding-ip.html</link><description>###  feign 接口直连地址 只配置url所有接口都生效，单个服务配置urls下面的具体服务&#13;
&#13;
```&#13;
feign:&#13;
  service:&#13;
    url: 192.168.0.175&#13;
    urls:&#13;
      his-storage-service: 192.168.0.175&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/feign-jie-kou-pei-zhi-zhi-ding-ip.html</guid><pubDate>Thu, 25 Jul 2024 06:40:10 +0000</pubDate></item><item><title>oracle对表和字段添加备注</title><link>https://qigaowei.github.io/post/oracle-dui-biao-he-zi-duan-tian-jia-bei-zhu.html</link><description>```sql&#13;
COMMENT ON COLUMN TABLE_NAME.green_channel_flag IS '字段备注';&#13;
COMMENT ON TABLE TABLE_NAME IS '表名备注';&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/oracle-dui-biao-he-zi-duan-tian-jia-bei-zhu.html</guid><pubDate>Thu, 25 Jul 2024 06:37:20 +0000</pubDate></item><item><title>mybatisplus中的查询</title><link>https://qigaowei.github.io/post/mybatisplus-zhong-de-cha-xun.html</link><description>```java&#13;
LambdaQueryWrapper&lt;NsAbc&gt; lambdaQueryWrapper = Wrappers.lambdaQuery();&#13;
		lambdaQueryWrapper.eq(NsAbc::getId,dto.getId());&#13;
		List&lt;NsAbc&gt; nsAbcs=nsAbcMapper.selectList(lambdaQueryWrapper);&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatisplus-zhong-de-cha-xun.html</guid><pubDate>Thu, 25 Jul 2024 06:35:32 +0000</pubDate></item><item><title>oracle的sql中需要对日期进行处理</title><link>https://qigaowei.github.io/post/oracle-de-sql-zhong-xu-yao-dui-ri-qi-jin-xing-chu-li.html</link><description>```sql&#13;
INSERT INTO table_name （CREATE_TIME）VALUES（TIMESTAMP '2024-01-15 08:41:00.000000'）；&#13;
```&#13;
```sql&#13;
select * from table_name  where start_date &gt;= TIMESTAMP'2024-09-01 00:00:00.0'&#13;
		AND end_date &lt;= TIMESTAMP'2024-09-11 00:00:00.0'&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/oracle-de-sql-zhong-xu-yao-dui-ri-qi-jin-xing-chu-li.html</guid><pubDate>Thu, 25 Jul 2024 06:31:15 +0000</pubDate></item><item><title>接口优化中的sql查询优化，秒级到毫秒级</title><link>https://qigaowei.github.io/post/jie-kou-you-hua-zhong-de-sql-cha-xun-you-hua-%EF%BC%8C-miao-ji-dao-hao-miao-ji.html</link><description>1. 循环很多次执行sql，才有优化的空间，执行sql操作次数太少，优化空间不大&#13;
2. 多条sql查询，可以用union拼起来，只执行一条。</description><guid isPermaLink="true">https://qigaowei.github.io/post/jie-kou-you-hua-zhong-de-sql-cha-xun-you-hua-%EF%BC%8C-miao-ji-dao-hao-miao-ji.html</guid><pubDate>Thu, 25 Jul 2024 00:58:47 +0000</pubDate></item><item><title>mybatisplus优化小tips</title><link>https://qigaowei.github.io/post/mybatisplus-you-hua-xiao-tips.html</link><description>1. 批量insert，可以一条语句执行&#13;
2. 批量update，不行&#13;
3. 建议使用批量insert，这样可以加快sql执行速度。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mybatisplus-you-hua-xiao-tips.html</guid><pubDate>Thu, 25 Jul 2024 00:47:50 +0000</pubDate></item><item><title>js与vue总结</title><link>https://qigaowei.github.io/post/js-yu-vue-zong-jie.html</link><description>1. const checkedRows = ref([])&#13;
获取用checkedRows.value&#13;
2. 新增修改删除以后需要调用list接口&#13;
3. 变量定义在使用地方的前面&#13;
4. &#13;
```&#13;
WHStyle = ref({&#13;
      width: '600',&#13;
      height: '400'&#13;
    })&#13;
```&#13;
不起作用改成下面的&#13;
```&#13;
 WHStyle = reactive({&#13;
      width: '500',&#13;
      height: '400'&#13;
    })&#13;
```&#13;
5. 不起作用，两个都试试&#13;
```&#13;
 :style='{ width: '100%' }'&#13;
```&#13;
```&#13;
 width='100%'&#13;
```&#13;
6.  值得注意的写法,获取数组的第一个元素&#13;
```&#13;
const typeList = ref([]);&#13;
typeList.value[0]&#13;
```&#13;
7.  动态生成表头，vue页面里面，必须要有对应表头的如下代码&#13;
```&#13;
&lt;template #execShowName_default='{ row }'&gt;&#13;
                  &lt;span&#13;
                  &gt;{{ row.showName }}&lt;/span&gt;&#13;
                &lt;/template&gt;&#13;
```&#13;
8. 实现按顺序加载方法，所有的方法都要加async和await &#13;
```&#13;
onMounted(async () =&gt; {&#13;
  await getSurveyTypeList();&#13;
  await getList();&#13;
});&#13;
async function getList(){&#13;
  await getSpecialSelectedList();&#13;
  await getSpecialUnselectedList();&#13;
}&#13;
async function getSpecialSelectedList() {&#13;
  await listArea({checkType:nmTypeCode.value}).then((response) =&gt; {&#13;
    specialSelectedList.value = response.rows;&#13;
  });&#13;
}&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/js-yu-vue-zong-jie.html</guid><pubDate>Wed, 24 Jul 2024 06:56:33 +0000</pubDate></item><item><title>采用AIGC，极大提升工作效率</title><link>https://qigaowei.github.io/post/cai-yong-AIGC%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</link><description>- 如通义千问，生成建表sql&#13;
- 通过上传原型图生成oracle表sql和备注，&#13;
- 对于字段比较多的表，&#13;
- 节省时间20分钟以上。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cai-yong-AIGC%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</guid><pubDate>Wed, 17 Jul 2024 06:51:38 +0000</pubDate></item><item><title>采用idea的JRebel插件，极大提升工作效率</title><link>https://qigaowei.github.io/post/cai-yong-idea-de-JRebel-cha-jian-%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</link><description>1. &#13;
- 采用idea的JRebel插件，&#13;
- 一键更新本地代码，&#13;
-  不用重启SpringBoot&#13;
-  每次可以节省几分钟&#13;
&#13;
2.  必须重启的情况&#13;
- 1MQ，修改了consumerGroup，@RocketMQMessageListener(consumerGroup=，需要重启。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cai-yong-idea-de-JRebel-cha-jian-%EF%BC%8C-ji-da-ti-sheng-gong-zuo-xiao-lv.html</guid><pubDate>Wed, 17 Jul 2024 06:49:57 +0000</pubDate></item><item><title>Mybatis使用union优化sql</title><link>https://qigaowei.github.io/post/Mybatis-shi-yong-union-you-hua-sql.html</link><description>```xml&#13;
&lt;foreach collection='nameList' item='name' separator='union'&gt;&#13;
		select id  from table where name = #{name}&#13;
	&lt;/foreach&gt;&#13;
```&#13;
 ``` java&#13;
   List&lt;Object&gt; getList(@Param('nameList')String[] nameList);  &#13;
```&#13;
- 优化接口，使用union，&#13;
- 加上索引，提高接口响应速度&#13;
-  in有数量限制，MySQL和oracle都有1000个限制&#13;
- in里面数据太多，可能不走索引&#13;
- EXISTS也可以，但是union的写法最简单&#13;
- EXISTS适合list不是传过来，而是一条语句查询完的&#13;
- UNION ALL会有重复数据。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Mybatis-shi-yong-union-you-hua-sql.html</guid><pubDate>Wed, 17 Jul 2024 06:49:26 +0000</pubDate></item><item><title>springboot过滤器</title><link>https://qigaowei.github.io/post/springboot-guo-lv-qi.html</link><description>```java&#13;
package com.abc.bigdata.riskmanagement.filter;&#13;
&#13;
import lombok.extern.slf4j.Slf4j;&#13;
import org.apache.skywalking.apm.toolkit.trace.TraceContext;&#13;
import org.springframework.web.filter.OncePerRequestFilter;&#13;
&#13;
import javax.servlet.FilterChain;&#13;
import javax.servlet.ServletException;&#13;
import javax.servlet.annotation.WebFilter;&#13;
import javax.servlet.http.HttpServletRequest;&#13;
import javax.servlet.http.HttpServletResponse;&#13;
import java.io.IOException;&#13;
&#13;
@Slf4j&#13;
@WebFilter(filterName = 'thirdFilter',urlPatterns = {'/value/tycCompanyBase'&#13;
})&#13;
public class ThirdFilter extends OncePerRequestFilter {&#13;
&#13;
    @Override&#13;
    protected void doFilterInternal(HttpServletRequest request,&#13;
                                    HttpServletResponse response,&#13;
                                    FilterChain chain) throws IOException, ServletException {&#13;
        String url=request.getServletPath();&#13;
        String traceId= TraceContext.traceId();&#13;
        log.error(url+traceId);&#13;
        chain.doFilter(request, response);&#13;
    }&#13;
&#13;
}&#13;
```&#13;
&#13;
1.  springboot启动类要加入注解&#13;
```java&#13;
@ServletComponentScan(basePackages = {'com.abc.bigdata.riskmanagement.filter'})&#13;
```&#13;
&#13;
2.  过滤器注册为@Component导致urlPatterns不生效,应该为@WebFilter&#13;
&#13;
。</description><guid isPermaLink="true">https://qigaowei.github.io/post/springboot-guo-lv-qi.html</guid><pubDate>Wed, 17 Jul 2024 06:36:05 +0000</pubDate></item><item><title>Feign绕过SSL验证的方案，Feign调用https接口，亲测可用，引入包非常少，非常简单</title><link>https://qigaowei.github.io/post/Feign-rao-guo-SSL-yan-zheng-de-fang-an-%EF%BC%8CFeign-diao-yong-https-jie-kou-%EF%BC%8C-qin-ce-ke-yong-%EF%BC%8C-yin-ru-bao-fei-chang-shao-%EF%BC%8C-fei-chang-jian-dan.html</link><description>```java&#13;
import feign.Client;&#13;
import feign.Feign;&#13;
import org.apache.http.conn.ssl.NoopHostnameVerifier;&#13;
import org.springframework.context.annotation.Bean;&#13;
import org.springframework.context.annotation.Configuration;&#13;
&#13;
import javax.net.ssl.*;&#13;
&#13;
/**&#13;
 * Feign配置，使其支持https&#13;
 */&#13;
@Configuration&#13;
public class FeignConfiguration {&#13;
&#13;
    @Bean&#13;
    public Feign.Builder feignBuilder() {&#13;
        final Client trustSSLSockets = client();&#13;
        return Feign.builder().client(trustSSLSockets);&#13;
    }&#13;
&#13;
    public static SSLSocketFactory feignTrustingSSLSocketFactory = null;&#13;
&#13;
    @Bean&#13;
    public Client client() {&#13;
        if(feignTrustingSSLSocketFactory==null){&#13;
            try {&#13;
                feignTrustingSSLSocketFactory = getFeignTrustingSSLSocketFactory();&#13;
            } catch (Exception e) {&#13;
                e.printStackTrace();&#13;
            }&#13;
        }&#13;
        Client client= new Client.Default(feignTrustingSSLSocketFactory, new NoopHostnameVerifier());&#13;
        return client;&#13;
    }&#13;
&#13;
    public static SSLSocketFactory getFeignTrustingSSLSocketFactory() throws Exception {&#13;
        javax.net.ssl.TrustManager[] trustAllCerts = new javax.net.ssl.TrustManager[1];&#13;
        javax.net.ssl.TrustManager tm = new miTM();&#13;
        trustAllCerts[0] = tm;&#13;
        javax.net.ssl.SSLContext sc = javax.net.ssl.SSLContext.getInstance('SSL');&#13;
        sc.init(null, trustAllCerts, null);&#13;
        return sc.getSocketFactory();&#13;
    }&#13;
    static class miTM implements javax.net.ssl.TrustManager, javax.net.ssl.X509TrustManager {&#13;
        public java.security.cert.X509Certificate[] getAcceptedIssuers() {&#13;
            return null;&#13;
        }&#13;
&#13;
        public boolean isServerTrusted(java.security.cert.X509Certificate[] certs) {&#13;
            return true;&#13;
        }&#13;
&#13;
        public boolean isClientTrusted(java.security.cert.X509Certificate[] certs) {&#13;
            return true;&#13;
        }&#13;
&#13;
        public void checkServerTrusted(java.security.cert.X509Certificate[] certs, String authType)&#13;
                throws java.security.cert.CertificateException {&#13;
            return;&#13;
        }&#13;
&#13;
        public void checkClientTrusted(java.security.cert.X509Certificate[] certs, String authType)&#13;
                throws java.security.cert.CertificateException {&#13;
            return;&#13;
        }&#13;
    }&#13;
&#13;
}&#13;
```&#13;
```xml&#13;
  &lt;dependency&gt;&#13;
            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;&#13;
        &lt;/dependency&gt;&#13;
&lt;dependency&gt;&#13;
            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;httpclient&lt;/artifactId&gt;&#13;
            &lt;version&gt;4.5.13&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
```java&#13;
@Component&#13;
@FeignClient(name = 'NgfwApiFeign', url = 'https://fakeAIMASKurl', configuration = FeignConfiguration.class)&#13;
public interface NgfwApiFeign {&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/Feign-rao-guo-SSL-yan-zheng-de-fang-an-%EF%BC%8CFeign-diao-yong-https-jie-kou-%EF%BC%8C-qin-ce-ke-yong-%EF%BC%8C-yin-ru-bao-fei-chang-shao-%EF%BC%8C-fei-chang-jian-dan.html</guid><pubDate>Wed, 17 Jul 2024 06:35:36 +0000</pubDate></item><item><title>mysql自定义排序</title><link>https://qigaowei.github.io/post/mysql-zi-ding-yi-pai-xu.html</link><description>```sql&#13;
CREATE TABLE `partner_company` (&#13;
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT '数据库主键',&#13;
  `model_credit_grade` varchar(32) DEFAULT NULL COMMENT '最近一次模型结果信用评级',&#13;
  PRIMARY KEY (`id`)&#13;
) ENGINE=InnoDB AUTO_INCREMENT=2669 DEFAULT CHARSET=utf8mb3;&#13;
```&#13;
```sql&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('1', 'AAA');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('2', 'AA');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('3', 'A');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('4', 'BBB');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('5', 'BB');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('6', 'B');&#13;
INSERT INTO `partner_company` (`id`, `model_credit_grade`) VALUES ('7', NULL);&#13;
```&#13;
下面sql为null值排最后&#13;
&#13;
&#13;
&#13;
```sql&#13;
SELECT&#13;
	model_credit_grade&#13;
FROM&#13;
	partner_company&#13;
ORDER BY&#13;
	ISNULL(model_credit_grade) || model_credit_grade = '',&#13;
	field(&#13;
		model_credit_grade,&#13;
		'AAA',&#13;
		'AA',&#13;
		'A',&#13;
		'BBB',&#13;
		'BB',&#13;
		'B',&#13;
		''&#13;
	)&#13;
```&#13;
![在这里插入图片描述](https://img-blog.csdnimg.cn/70b4603a5d63459091cb27a51b29d470.png)&#13;
&#13;
&#13;
	下面sql为null值排最前&#13;
&#13;
```sql&#13;
SELECT&#13;
	model_credit_grade&#13;
FROM&#13;
	partner_company&#13;
ORDER BY&#13;
	field(&#13;
		model_credit_grade,&#13;
		'',&#13;
		'B',&#13;
		'BB',&#13;
		'BBB',&#13;
		'A',&#13;
		'AA',&#13;
		'AAA'&#13;
	),&#13;
	ISNULL(model_credit_grade) || model_credit_grade = ''&#13;
```&#13;
&#13;
&#13;
&#13;
&#13;
![在这里插入图片描述](https://img-blog.csdnimg.cn/6be349d2deac436d87c5108608d30179.png)。</description><guid isPermaLink="true">https://qigaowei.github.io/post/mysql-zi-ding-yi-pai-xu.html</guid><pubDate>Wed, 17 Jul 2024 06:35:07 +0000</pubDate></item><item><title>将子网转为ip范围</title><link>https://qigaowei.github.io/post/jiang-zi-wang-zhuan-wei-ip-fan-wei.html</link><description>```xml&#13;
&lt;dependency&gt;&#13;
            &lt;groupId&gt;commons-net&lt;/groupId&gt;&#13;
            &lt;artifactId&gt;commons-net&lt;/artifactId&gt;&#13;
            &lt;version&gt;3.6&lt;/version&gt;&#13;
        &lt;/dependency&gt;&#13;
```&#13;
&#13;
```java&#13;
          private static List&lt;String&gt; cidrToIpList(String cidr){&#13;
        SubnetUtils utils = new SubnetUtils(cidr);&#13;
        String[] adress = utils.getInfo().getAllAddresses();&#13;
        return Arrays.asList(adress);&#13;
    }&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/jiang-zi-wang-zhuan-wei-ip-fan-wei.html</guid><pubDate>Wed, 17 Jul 2024 06:34:46 +0000</pubDate></item><item><title>git强制回滚</title><link>https://qigaowei.github.io/post/git-qiang-zhi-hui-gun.html</link><description>```&#13;
git reset --hard 4586e7b93cf81db1fe421bd52fdbf6371fd207d3&#13;
git push -f&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/git-qiang-zhi-hui-gun.html</guid><pubDate>Wed, 17 Jul 2024 06:34:20 +0000</pubDate></item><item><title>从List删除元素，需要注意的点</title><link>https://qigaowei.github.io/post/cong-List-shan-chu-yuan-su-%EF%BC%8C-xu-yao-zhu-yi-de-dian.html</link><description>```java&#13;
     List&lt;String&gt; list=new ArrayList&lt;String&gt;();&#13;
        list.add('1');&#13;
        list.add('2');&#13;
        list.add('3');&#13;
        list.add('4');&#13;
        for(String str : list){&#13;
            if('3'.equals(str)){&#13;
                list.remove(str);&#13;
            }&#13;
            System.out.println(str);//代表业务逻辑&#13;
        }&#13;
        System.out.println();&#13;
        for(String str : list){&#13;
            System.out.println(str);&#13;
        }&#13;
```&#13;
结果如下，第一个for循环，4没有打印出来需要注意&#13;
1&#13;
2&#13;
3&#13;
&#13;
1&#13;
2&#13;
4&#13;
&#13;
- 这样删除会有问题，可以复制有用的到新的list。</description><guid isPermaLink="true">https://qigaowei.github.io/post/cong-List-shan-chu-yuan-su-%EF%BC%8C-xu-yao-zhu-yi-de-dian.html</guid><pubDate>Wed, 17 Jul 2024 06:33:53 +0000</pubDate></item><item><title>git从主干拉取新分支</title><link>https://qigaowei.github.io/post/git-cong-zhu-gan-la-qu-xin-fen-zhi.html</link><description>```&#13;
git checkout master&#13;
git checkout -b enterprise1.2.1&#13;
git push origin enterprise1.2.1:enterprise1.2.1&#13;
```。</description><guid isPermaLink="true">https://qigaowei.github.io/post/git-cong-zhu-gan-la-qu-xin-fen-zhi.html</guid><pubDate>Wed, 17 Jul 2024 06:32:51 +0000</pubDate></item><item><title>swagger不支持泛型返回值的解决方法</title><link>https://qigaowei.github.io/post/swagger-bu-zhi-chi-fan-xing-fan-hui-zhi-de-jie-jue-fang-fa.html</link><description>1. &#13;
  -  公司使用apifox给前端提供接口文档，&#13;
  -  我先通过[localhost](http://localhost:9604/v2/api-docs),导出swagger的json格式，&#13;
  -  然后再导入到apifox，&#13;
  -  结果接口返回值的泛型里面的字段不显示。</description><guid isPermaLink="true">https://qigaowei.github.io/post/swagger-bu-zhi-chi-fan-xing-fan-hui-zhi-de-jie-jue-fang-fa.html</guid><pubDate>Wed, 17 Jul 2024 06:32:13 +0000</pubDate></item><item><title>小七的博客</title><link>https://qigaowei.github.io/post/xiao-qi-de-bo-ke.html</link><description>小七的博客。</description><guid isPermaLink="true">https://qigaowei.github.io/post/xiao-qi-de-bo-ke.html</guid><pubDate>Wed, 17 Jul 2024 06:25:59 +0000</pubDate></item></channel></rss>